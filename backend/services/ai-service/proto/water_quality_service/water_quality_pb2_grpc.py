# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from proto.water_quality_service import water_quality_pb2 as proto_dot_water__quality__service_dot_water__quality__pb2

GRPC_GENERATED_VERSION = '1.72.0rc1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in proto/water_quality_service/water_quality_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class WaterQualityServiceStub(object):
    """--- Service Definition ---

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStations = channel.unary_unary(
                '/waterquality.WaterQualityService/CreateStations',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateStationsRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateStationsResponse.FromString,
                _registered_method=True)
        self.UpdateStations = channel.unary_unary(
                '/waterquality.WaterQualityService/UpdateStations',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateStationsRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateStationsResponse.FromString,
                _registered_method=True)
        self.DeleteStations = channel.unary_unary(
                '/waterquality.WaterQualityService/DeleteStations',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.ListStations = channel.unary_unary(
                '/waterquality.WaterQualityService/ListStations',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListStationsRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListStationsResponse.FromString,
                _registered_method=True)
        self.CreateDataPoints = channel.unary_unary(
                '/waterquality.WaterQualityService/CreateDataPoints',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataPointsRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataPointsResponse.FromString,
                _registered_method=True)
        self.UpdateDataPoints = channel.unary_unary(
                '/waterquality.WaterQualityService/UpdateDataPoints',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataPointsRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataPointsResponse.FromString,
                _registered_method=True)
        self.DeleteDataPoints = channel.unary_unary(
                '/waterquality.WaterQualityService/DeleteDataPoints',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.ListDataPointsByStation = channel.unary_unary(
                '/waterquality.WaterQualityService/ListDataPointsByStation',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationResponse.FromString,
                _registered_method=True)
        self.ListDataPointsByStationPost = channel.unary_unary(
                '/waterquality.WaterQualityService/ListDataPointsByStationPost',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationResponse.FromString,
                _registered_method=True)
        self.ListAllDataPoints = channel.unary_unary(
                '/waterquality.WaterQualityService/ListAllDataPoints',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListAllDataPointsRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListAllDataPointsResponse.FromString,
                _registered_method=True)
        self.UploadData = channel.stream_unary(
                '/waterquality.WaterQualityService/UploadData',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UploadRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UploadDataResponse.FromString,
                _registered_method=True)
        self.CreateDataSourceSchema = channel.unary_unary(
                '/waterquality.WaterQualityService/CreateDataSourceSchema',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataSourceSchemaRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataSourceSchemaResponse.FromString,
                _registered_method=True)
        self.UpdateDataSourceSchema = channel.unary_unary(
                '/waterquality.WaterQualityService/UpdateDataSourceSchema',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataSourceSchemaRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataSourceSchemaResponse.FromString,
                _registered_method=True)
        self.GetDataSourceSchema = channel.unary_unary(
                '/waterquality.WaterQualityService/GetDataSourceSchema',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.GetDataSourceSchemaRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.GetDataSourceSchemaResponse.FromString,
                _registered_method=True)
        self.ListDataSourceSchemas = channel.unary_unary(
                '/waterquality.WaterQualityService/ListDataSourceSchemas',
                request_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataSourceSchemasRequest.SerializeToString,
                response_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataSourceSchemasResponse.FromString,
                _registered_method=True)


class WaterQualityServiceServicer(object):
    """--- Service Definition ---

    """

    def CreateStations(self, request, context):
        """Station RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDataPoints(self, request, context):
        """DataPoint RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDataPoints(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDataPoints(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataPointsByStation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataPointsByStationPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllDataPoints(self, request, context):
        """--- Add ListAllDataPoints RPC ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadData(self, request_iterator, context):
        """File Upload RPC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDataSourceSchema(self, request, context):
        """DataSourceSchema RPCs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDataSourceSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataSourceSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataSourceSchemas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WaterQualityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStations': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStations,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateStationsRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateStationsResponse.SerializeToString,
            ),
            'UpdateStations': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStations,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateStationsRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateStationsResponse.SerializeToString,
            ),
            'DeleteStations': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStations,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteResponse.SerializeToString,
            ),
            'ListStations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStations,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListStationsRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListStationsResponse.SerializeToString,
            ),
            'CreateDataPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataPoints,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataPointsRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataPointsResponse.SerializeToString,
            ),
            'UpdateDataPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDataPoints,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataPointsRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataPointsResponse.SerializeToString,
            ),
            'DeleteDataPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDataPoints,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.DeleteResponse.SerializeToString,
            ),
            'ListDataPointsByStation': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDataPointsByStation,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationResponse.SerializeToString,
            ),
            'ListDataPointsByStationPost': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDataPointsByStationPost,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationResponse.SerializeToString,
            ),
            'ListAllDataPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllDataPoints,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListAllDataPointsRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListAllDataPointsResponse.SerializeToString,
            ),
            'UploadData': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadData,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UploadRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UploadDataResponse.SerializeToString,
            ),
            'CreateDataSourceSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataSourceSchema,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataSourceSchemaRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataSourceSchemaResponse.SerializeToString,
            ),
            'UpdateDataSourceSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDataSourceSchema,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataSourceSchemaRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataSourceSchemaResponse.SerializeToString,
            ),
            'GetDataSourceSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataSourceSchema,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.GetDataSourceSchemaRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.GetDataSourceSchemaResponse.SerializeToString,
            ),
            'ListDataSourceSchemas': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDataSourceSchemas,
                    request_deserializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataSourceSchemasRequest.FromString,
                    response_serializer=proto_dot_water__quality__service_dot_water__quality__pb2.ListDataSourceSchemasResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'waterquality.WaterQualityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('waterquality.WaterQualityService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WaterQualityService(object):
    """--- Service Definition ---

    """

    @staticmethod
    def CreateStations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/CreateStations',
            proto_dot_water__quality__service_dot_water__quality__pb2.CreateStationsRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.CreateStationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/UpdateStations',
            proto_dot_water__quality__service_dot_water__quality__pb2.UpdateStationsRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.UpdateStationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteStations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/DeleteStations',
            proto_dot_water__quality__service_dot_water__quality__pb2.DeleteRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListStations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/ListStations',
            proto_dot_water__quality__service_dot_water__quality__pb2.ListStationsRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.ListStationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDataPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/CreateDataPoints',
            proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataPointsRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataPointsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDataPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/UpdateDataPoints',
            proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataPointsRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataPointsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDataPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/DeleteDataPoints',
            proto_dot_water__quality__service_dot_water__quality__pb2.DeleteRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDataPointsByStation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/ListDataPointsByStation',
            proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDataPointsByStationPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/ListDataPointsByStationPost',
            proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.ListDataPointsByStationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAllDataPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/ListAllDataPoints',
            proto_dot_water__quality__service_dot_water__quality__pb2.ListAllDataPointsRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.ListAllDataPointsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadData(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/waterquality.WaterQualityService/UploadData',
            proto_dot_water__quality__service_dot_water__quality__pb2.UploadRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.UploadDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDataSourceSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/CreateDataSourceSchema',
            proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataSourceSchemaRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.CreateDataSourceSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDataSourceSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/UpdateDataSourceSchema',
            proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataSourceSchemaRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.UpdateDataSourceSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDataSourceSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/GetDataSourceSchema',
            proto_dot_water__quality__service_dot_water__quality__pb2.GetDataSourceSchemaRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.GetDataSourceSchemaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDataSourceSchemas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/waterquality.WaterQualityService/ListDataSourceSchemas',
            proto_dot_water__quality__service_dot_water__quality__pb2.ListDataSourceSchemasRequest.SerializeToString,
            proto_dot_water__quality__service_dot_water__quality__pb2.ListDataSourceSchemasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
