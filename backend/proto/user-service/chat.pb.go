// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/user-service/chat.proto

package user_service

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	core "golang-microservices-boilerplate/proto/core"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- Direct Chat Message ---
// Renamed from ChatMessage to avoid confusion if User service already has a generic Message type
type DirectChatMessage struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderId   string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	ReceiverId string                 `protobuf:"bytes,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	Message    string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Read       bool                   `protobuf:"varint,6,opt,name=read,proto3" json:"read,omitempty"`
	// updated_at and deleted_at from BaseEntity can be added if needed by clients
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectChatMessage) Reset() {
	*x = DirectChatMessage{}
	mi := &file_proto_user_service_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectChatMessage) ProtoMessage() {}

func (x *DirectChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectChatMessage.ProtoReflect.Descriptor instead.
func (*DirectChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{0}
}

func (x *DirectChatMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DirectChatMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *DirectChatMessage) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *DirectChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DirectChatMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DirectChatMessage) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *DirectChatMessage) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DirectChatMessage) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// --- Conversation Summary ---
// Represents the summary needed by the ListConversations use case
type ConversationSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Use the User message type defined in user.proto (assuming it exists)
	OtherParticipant *User                  `protobuf:"bytes,1,opt,name=other_participant,json=otherParticipant,proto3" json:"other_participant,omitempty"`
	LastMessage      *DirectChatMessage     `protobuf:"bytes,2,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	LastUpdated      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	UnreadCount      int32                  `protobuf:"varint,4,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"` // conversation_id (other participant's ID) is implicitly participant.id
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConversationSummary) Reset() {
	*x = ConversationSummary{}
	mi := &file_proto_user_service_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationSummary) ProtoMessage() {}

func (x *ConversationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationSummary.ProtoReflect.Descriptor instead.
func (*ConversationSummary) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ConversationSummary) GetOtherParticipant() *User {
	if x != nil {
		return x.OtherParticipant
	}
	return nil
}

func (x *ConversationSummary) GetLastMessage() *DirectChatMessage {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

func (x *ConversationSummary) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *ConversationSummary) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// Send Message
type SendMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sender_id is usually inferred from the authenticated user context (JWT) on the server-side
	// string sender_id = 1; // Can be added if needed explicitly
	ReceiverId    string `protobuf:"bytes,1,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_proto_user_service_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageRequest) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *SendMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *DirectChatMessage     `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_proto_user_service_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageResponse) GetMessage() *DirectChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// List Messages Between Users
type ListMessagesBetweenUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId1       string                 `protobuf:"bytes,1,opt,name=user_id1,json=userId1,proto3" json:"user_id1,omitempty"`
	UserId2       string                 `protobuf:"bytes,2,opt,name=user_id2,json=userId2,proto3" json:"user_id2,omitempty"`
	Options       *core.FilterOptions    `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"` // For pagination, sorting by time etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMessagesBetweenUsersRequest) Reset() {
	*x = ListMessagesBetweenUsersRequest{}
	mi := &file_proto_user_service_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessagesBetweenUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesBetweenUsersRequest) ProtoMessage() {}

func (x *ListMessagesBetweenUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesBetweenUsersRequest.ProtoReflect.Descriptor instead.
func (*ListMessagesBetweenUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ListMessagesBetweenUsersRequest) GetUserId1() string {
	if x != nil {
		return x.UserId1
	}
	return ""
}

func (x *ListMessagesBetweenUsersRequest) GetUserId2() string {
	if x != nil {
		return x.UserId2
	}
	return ""
}

func (x *ListMessagesBetweenUsersRequest) GetOptions() *core.FilterOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ListMessagesBetweenUsersResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Messages       []*DirectChatMessage   `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	PaginationInfo *core.PaginationInfo   `protobuf:"bytes,2,opt,name=pagination_info,json=paginationInfo,proto3" json:"pagination_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListMessagesBetweenUsersResponse) Reset() {
	*x = ListMessagesBetweenUsersResponse{}
	mi := &file_proto_user_service_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMessagesBetweenUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMessagesBetweenUsersResponse) ProtoMessage() {}

func (x *ListMessagesBetweenUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMessagesBetweenUsersResponse.ProtoReflect.Descriptor instead.
func (*ListMessagesBetweenUsersResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{5}
}

func (x *ListMessagesBetweenUsersResponse) GetMessages() []*DirectChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ListMessagesBetweenUsersResponse) GetPaginationInfo() *core.PaginationInfo {
	if x != nil {
		return x.PaginationInfo
	}
	return nil
}

// List Unseen Messages For User
type ListUnseenMessagesForUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUnseenMessagesForUserRequest) Reset() {
	*x = ListUnseenMessagesForUserRequest{}
	mi := &file_proto_user_service_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUnseenMessagesForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnseenMessagesForUserRequest) ProtoMessage() {}

func (x *ListUnseenMessagesForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnseenMessagesForUserRequest.ProtoReflect.Descriptor instead.
func (*ListUnseenMessagesForUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{6}
}

type ListUnseenMessagesForUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*DirectChatMessage   `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUnseenMessagesForUserResponse) Reset() {
	*x = ListUnseenMessagesForUserResponse{}
	mi := &file_proto_user_service_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUnseenMessagesForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUnseenMessagesForUserResponse) ProtoMessage() {}

func (x *ListUnseenMessagesForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUnseenMessagesForUserResponse.ProtoReflect.Descriptor instead.
func (*ListUnseenMessagesForUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{7}
}

func (x *ListUnseenMessagesForUserResponse) GetMessages() []*DirectChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

// Mark Messages As Read
type MarkMessagesAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageIds    []string               `protobuf:"bytes,1,rep,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"` // Corrected example format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMessagesAsReadRequest) Reset() {
	*x = MarkMessagesAsReadRequest{}
	mi := &file_proto_user_service_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMessagesAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMessagesAsReadRequest) ProtoMessage() {}

func (x *MarkMessagesAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_service_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMessagesAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkMessagesAsReadRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_service_chat_proto_rawDescGZIP(), []int{8}
}

func (x *MarkMessagesAsReadRequest) GetMessageIds() []string {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

var File_proto_user_service_chat_proto protoreflect.FileDescriptor

const file_proto_user_service_chat_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/user-service/chat.proto\x12\vuserservice\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x17proto/core/common.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1dproto/user-service/user.proto\"\xc4\a\n" +
	"\x11DirectChatMessage\x12F\n" +
	"\x02id\x18\x01 \x01(\tB6\x92A32!Unique message identifier (UUID).J\x0e\"msg-uuid-123\"R\x02id\x12Z\n" +
	"\tsender_id\x18\x02 \x01(\tB=\x92A:2$ID of the user who sent the message.J\x12\"user-uuid-sender\"R\bsenderId\x12d\n" +
	"\vreceiver_id\x18\x03 \x01(\tBC\x92A@2(ID of the user who received the message.J\x14\"user-uuid-receiver\"R\n" +
	"receiverId\x12O\n" +
	"\amessage\x18\x04 \x01(\tB5\x92A22 The text content of the message.J\x0e\"Hello there!\"R\amessage\x12\x86\x01\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampBK\x92AH2.Timestamp when the message was created (sent).J\x16\"2023-10-27T10:05:00Z\"R\tcreatedAt\x12O\n" +
	"\x04read\x18\x06 \x01(\bB;\x92A82/Indicates if the receiver has read the message.J\x05falseR\x04read\x12n\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampB3\x92A02\x16Last update timestamp.J\x16\"2023-10-27T10:05:00Z\"R\tupdatedAt\x12j\n" +
	"\n" +
	"deleted_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampB*\x92A'2%Deletion timestamp (if soft-deleted).H\x00R\tdeletedAt\x88\x01\x01:\x8e\x01\x92A\x8a\x01\n" +
	"\x87\x01*\x11DirectChatMessage25Represents a single direct message between two users.\xd2\x01\x02id\xd2\x01\tsender_id\xd2\x01\vreceiver_id\xd2\x01\amessage\xd2\x01\n" +
	"created_at\xd2\x01\x04readB\r\n" +
	"\v_deleted_at\"\xb3\x05\n" +
	"\x13ConversationSummary\x12s\n" +
	"\x11other_participant\x18\x01 \x01(\v2\x11.userservice.UserB3\x92A02.Details of the other user in the conversation.R\x10otherParticipant\x12t\n" +
	"\flast_message\x18\x02 \x01(\v2\x1e.userservice.DirectChatMessageB1\x92A.2,The most recent message in the conversation.R\vlastMessage\x12\x9c\x01\n" +
	"\flast_updated\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB]\x92AZ2@Timestamp of the last message (same as last_message.created_at).J\x16\"2023-10-27T10:05:00Z\"R\vlastUpdated\x12u\n" +
	"\funread_count\x18\x04 \x01(\x05BR\x92AO2JNumber of unread messages from the other participant for the current user.J\x013R\vunreadCount:\x9a\x01\x92A\x96\x01\n" +
	"\x93\x01*\x13ConversationSummary2;Summary of a direct message conversation with another user.\xd2\x01\x11other_participant\xd2\x01\flast_message\xd2\x01\flast_updated\xd2\x01\funread_count\"\x89\x02\n" +
	"\x12SendMessageRequest\x12b\n" +
	"\vreceiver_id\x18\x01 \x01(\tBA\x92A>2&ID of the user to send the message to.J\x14\"user-uuid-receiver\"R\n" +
	"receiverId\x12Z\n" +
	"\amessage\x18\x02 \x01(\tB@\x92A=2 The text content of the message.J\x19\"This is a test message.\"R\amessage:3\x92A0\n" +
	".*\x14Send Message Request\xd2\x01\vreceiver_id\xd2\x01\amessage\"m\n" +
	"\x13SendMessageResponse\x128\n" +
	"\amessage\x18\x01 \x01(\v2\x1e.userservice.DirectChatMessageR\amessage:\x1c\x92A\x19\n" +
	"\x17*\x15Send Message Response\"\xd3\x02\n" +
	"\x1fListMessagesBetweenUsersRequest\x12]\n" +
	"\buser_id1\x18\x01 \x01(\tBB\x92A?2)ID of the first user in the conversation.J\x12\"user-uuid-sender\"R\auserId1\x12`\n" +
	"\buser_id2\x18\x02 \x01(\tBE\x92AB2*ID of the second user in the conversation.J\x14\"user-uuid-receiver\"R\auserId2\x12-\n" +
	"\aoptions\x18\x03 \x01(\v2\x13.core.FilterOptionsR\aoptions:@\x92A=\n" +
	";*#List Messages Between Users Request\xd2\x01\buser_id1\xd2\x01\buser_id2\"\xca\x01\n" +
	" ListMessagesBetweenUsersResponse\x12:\n" +
	"\bmessages\x18\x01 \x03(\v2\x1e.userservice.DirectChatMessageR\bmessages\x12=\n" +
	"\x0fpagination_info\x18\x02 \x01(\v2\x14.core.PaginationInfoR\x0epaginationInfo:+\x92A(\n" +
	"&*$List Messages Between Users Response\"P\n" +
	" ListUnseenMessagesForUserRequest:,\x92A)\n" +
	"'*%List Unseen Messages For User Request\"\x8e\x01\n" +
	"!ListUnseenMessagesForUserResponse\x12:\n" +
	"\bmessages\x18\x01 \x03(\v2\x1e.userservice.DirectChatMessageR\bmessages:-\x92A*\n" +
	"(*&List Unseen Messages For User Response\"\xbb\x01\n" +
	"\x19MarkMessagesAsReadRequest\x12j\n" +
	"\vmessage_ids\x18\x01 \x03(\tBI\x92AF2&List of message UUIDs to mark as read.J\x1c[\"msg-uuid-1\", \"msg-uuid-2\"]R\n" +
	"messageIds:2\x92A/\n" +
	"-*\x1dMark Messages As Read Request\xd2\x01\vmessage_ids2\xae\x06\n" +
	"\x14DirectMessageService\x12\x96\x01\n" +
	"\vSendMessage\x12\x1f.userservice.SendMessageRequest\x1a .userservice.SendMessageResponse\"D\x92A&\n" +
	"\x0fDirect Messages\x12\x13Send Direct Message\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/api/v1/messages\x12\xd3\x01\n" +
	"\x18ListMessagesBetweenUsers\x12,.userservice.ListMessagesBetweenUsersRequest\x1a-.userservice.ListMessagesBetweenUsersResponse\"Z\x92A2\n" +
	"\x0fDirect Messages\x12\x1fList Messages Between Two Users\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/messages/conversation\x12\xd6\x01\n" +
	"\x19ListUnseenMessagesForUser\x12-.userservice.ListUnseenMessagesForUserRequest\x1a..userservice.ListUnseenMessagesForUserResponse\"Z\x92A8\n" +
	"\x0fDirect Messages\x12%List Unseen Messages for Current User\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/messages/unseen\x12\xa1\x01\n" +
	"\x12MarkMessagesAsRead\x12&.userservice.MarkMessagesAsReadRequest\x1a\x16.google.protobuf.Empty\"K\x92A(\n" +
	"\x0fDirect Messages\x12\x15Mark Messages as Read\x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/messages/read\x1a*\x92A'\x12%Operations related to direct messagesB\x97\x02\x92A\xde\x01\x12T\n" +
	"\x1cDirect Messaging Service API\x12/API for managing direct messages between users.2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonZL\n" +
	"J\n" +
	"\n" +
	"BearerAuth\x12<\b\x02\x12'JWT Bearer token (e.g., 'Bearer ey...')\x1a\rAuthorization \x02b\x10\n" +
	"\x0e\n" +
	"\n" +
	"BearerAuth\x12\x00Z3golang-microservices-boilerplate/proto/user-serviceb\x06proto3"

var (
	file_proto_user_service_chat_proto_rawDescOnce sync.Once
	file_proto_user_service_chat_proto_rawDescData []byte
)

func file_proto_user_service_chat_proto_rawDescGZIP() []byte {
	file_proto_user_service_chat_proto_rawDescOnce.Do(func() {
		file_proto_user_service_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_user_service_chat_proto_rawDesc), len(file_proto_user_service_chat_proto_rawDesc)))
	})
	return file_proto_user_service_chat_proto_rawDescData
}

var file_proto_user_service_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_user_service_chat_proto_goTypes = []any{
	(*DirectChatMessage)(nil),                 // 0: userservice.DirectChatMessage
	(*ConversationSummary)(nil),               // 1: userservice.ConversationSummary
	(*SendMessageRequest)(nil),                // 2: userservice.SendMessageRequest
	(*SendMessageResponse)(nil),               // 3: userservice.SendMessageResponse
	(*ListMessagesBetweenUsersRequest)(nil),   // 4: userservice.ListMessagesBetweenUsersRequest
	(*ListMessagesBetweenUsersResponse)(nil),  // 5: userservice.ListMessagesBetweenUsersResponse
	(*ListUnseenMessagesForUserRequest)(nil),  // 6: userservice.ListUnseenMessagesForUserRequest
	(*ListUnseenMessagesForUserResponse)(nil), // 7: userservice.ListUnseenMessagesForUserResponse
	(*MarkMessagesAsReadRequest)(nil),         // 8: userservice.MarkMessagesAsReadRequest
	(*timestamppb.Timestamp)(nil),             // 9: google.protobuf.Timestamp
	(*User)(nil),                              // 10: userservice.User
	(*core.FilterOptions)(nil),                // 11: core.FilterOptions
	(*core.PaginationInfo)(nil),               // 12: core.PaginationInfo
	(*emptypb.Empty)(nil),                     // 13: google.protobuf.Empty
}
var file_proto_user_service_chat_proto_depIdxs = []int32{
	9,  // 0: userservice.DirectChatMessage.created_at:type_name -> google.protobuf.Timestamp
	9,  // 1: userservice.DirectChatMessage.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 2: userservice.DirectChatMessage.deleted_at:type_name -> google.protobuf.Timestamp
	10, // 3: userservice.ConversationSummary.other_participant:type_name -> userservice.User
	0,  // 4: userservice.ConversationSummary.last_message:type_name -> userservice.DirectChatMessage
	9,  // 5: userservice.ConversationSummary.last_updated:type_name -> google.protobuf.Timestamp
	0,  // 6: userservice.SendMessageResponse.message:type_name -> userservice.DirectChatMessage
	11, // 7: userservice.ListMessagesBetweenUsersRequest.options:type_name -> core.FilterOptions
	0,  // 8: userservice.ListMessagesBetweenUsersResponse.messages:type_name -> userservice.DirectChatMessage
	12, // 9: userservice.ListMessagesBetweenUsersResponse.pagination_info:type_name -> core.PaginationInfo
	0,  // 10: userservice.ListUnseenMessagesForUserResponse.messages:type_name -> userservice.DirectChatMessage
	2,  // 11: userservice.DirectMessageService.SendMessage:input_type -> userservice.SendMessageRequest
	4,  // 12: userservice.DirectMessageService.ListMessagesBetweenUsers:input_type -> userservice.ListMessagesBetweenUsersRequest
	6,  // 13: userservice.DirectMessageService.ListUnseenMessagesForUser:input_type -> userservice.ListUnseenMessagesForUserRequest
	8,  // 14: userservice.DirectMessageService.MarkMessagesAsRead:input_type -> userservice.MarkMessagesAsReadRequest
	3,  // 15: userservice.DirectMessageService.SendMessage:output_type -> userservice.SendMessageResponse
	5,  // 16: userservice.DirectMessageService.ListMessagesBetweenUsers:output_type -> userservice.ListMessagesBetweenUsersResponse
	7,  // 17: userservice.DirectMessageService.ListUnseenMessagesForUser:output_type -> userservice.ListUnseenMessagesForUserResponse
	13, // 18: userservice.DirectMessageService.MarkMessagesAsRead:output_type -> google.protobuf.Empty
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_user_service_chat_proto_init() }
func file_proto_user_service_chat_proto_init() {
	if File_proto_user_service_chat_proto != nil {
		return
	}
	file_proto_user_service_user_proto_init()
	file_proto_user_service_chat_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_user_service_chat_proto_rawDesc), len(file_proto_user_service_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_service_chat_proto_goTypes,
		DependencyIndexes: file_proto_user_service_chat_proto_depIdxs,
		MessageInfos:      file_proto_user_service_chat_proto_msgTypes,
	}.Build()
	File_proto_user_service_chat_proto = out.File
	file_proto_user_service_chat_proto_goTypes = nil
	file_proto_user_service_chat_proto_depIdxs = nil
}
