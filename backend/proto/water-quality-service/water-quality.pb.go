// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/water-quality-service/water-quality.proto

package waterquality

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	core "golang-microservices-boilerplate/proto/core"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObservationType int32

const (
	ObservationType_OBSERVATION_TYPE_UNSPECIFIED         ObservationType = 0 // Default value
	ObservationType_OBSERVATION_TYPE_ACTUAL              ObservationType = 1
	ObservationType_OBSERVATION_TYPE_INTERPOLATION       ObservationType = 2
	ObservationType_OBSERVATION_TYPE_PREDICTED           ObservationType = 3
	ObservationType_OBSERVATION_TYPE_REALTIME_MONITORING ObservationType = 4
)

// Enum value maps for ObservationType.
var (
	ObservationType_name = map[int32]string{
		0: "OBSERVATION_TYPE_UNSPECIFIED",
		1: "OBSERVATION_TYPE_ACTUAL",
		2: "OBSERVATION_TYPE_INTERPOLATION",
		3: "OBSERVATION_TYPE_PREDICTED",
		4: "OBSERVATION_TYPE_REALTIME_MONITORING",
	}
	ObservationType_value = map[string]int32{
		"OBSERVATION_TYPE_UNSPECIFIED":         0,
		"OBSERVATION_TYPE_ACTUAL":              1,
		"OBSERVATION_TYPE_INTERPOLATION":       2,
		"OBSERVATION_TYPE_PREDICTED":           3,
		"OBSERVATION_TYPE_REALTIME_MONITORING": 4,
	}
)

func (x ObservationType) Enum() *ObservationType {
	p := new(ObservationType)
	*p = x
	return p
}

func (x ObservationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObservationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_water_quality_service_water_quality_proto_enumTypes[0].Descriptor()
}

func (ObservationType) Type() protoreflect.EnumType {
	return &file_proto_water_quality_service_water_quality_proto_enumTypes[0]
}

func (x ObservationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObservationType.Descriptor instead.
func (ObservationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{0}
}

type IndicatorPurpose int32

const (
	IndicatorPurpose_INDICATOR_PURPOSE_UNSPECIFIED IndicatorPurpose = 0 // Default value
	IndicatorPurpose_INDICATOR_PURPOSE_PREDICTION  IndicatorPurpose = 1
	IndicatorPurpose_INDICATOR_PURPOSE_DISPLAY     IndicatorPurpose = 2
	IndicatorPurpose_INDICATOR_PURPOSE_ANALYSIS    IndicatorPurpose = 3
)

// Enum value maps for IndicatorPurpose.
var (
	IndicatorPurpose_name = map[int32]string{
		0: "INDICATOR_PURPOSE_UNSPECIFIED",
		1: "INDICATOR_PURPOSE_PREDICTION",
		2: "INDICATOR_PURPOSE_DISPLAY",
		3: "INDICATOR_PURPOSE_ANALYSIS",
	}
	IndicatorPurpose_value = map[string]int32{
		"INDICATOR_PURPOSE_UNSPECIFIED": 0,
		"INDICATOR_PURPOSE_PREDICTION":  1,
		"INDICATOR_PURPOSE_DISPLAY":     2,
		"INDICATOR_PURPOSE_ANALYSIS":    3,
	}
)

func (x IndicatorPurpose) Enum() *IndicatorPurpose {
	p := new(IndicatorPurpose)
	*p = x
	return p
}

func (x IndicatorPurpose) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndicatorPurpose) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_water_quality_service_water_quality_proto_enumTypes[1].Descriptor()
}

func (IndicatorPurpose) Type() protoreflect.EnumType {
	return &file_proto_water_quality_service_water_quality_proto_enumTypes[1]
}

func (x IndicatorPurpose) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndicatorPurpose.Descriptor instead.
func (IndicatorPurpose) EnumDescriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{1}
}

type Station struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Base fields inline
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	// Station specific fields
	Name          string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Latitude      float64 `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64 `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Country       string  `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`
	Location      string  `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Station) Reset() {
	*x = Station{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Station) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Station) ProtoMessage() {}

func (x *Station) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Station.ProtoReflect.Descriptor instead.
func (*Station) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{0}
}

func (x *Station) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Station) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Station) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Station) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Station) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Station) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Station) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Station) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Station) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type StationInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// No base fields needed for input typically
	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Latitude      float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Country       string  `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Location      string  `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationInput) Reset() {
	*x = StationInput{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationInput) ProtoMessage() {}

func (x *StationInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationInput.ProtoReflect.Descriptor instead.
func (*StationInput) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{1}
}

func (x *StationInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StationInput) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *StationInput) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *StationInput) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *StationInput) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type CreateStationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*StationInput        `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStationsRequest) Reset() {
	*x = CreateStationsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStationsRequest) ProtoMessage() {}

func (x *CreateStationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStationsRequest.ProtoReflect.Descriptor instead.
func (*CreateStationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{2}
}

func (x *CreateStationsRequest) GetStations() []*StationInput {
	if x != nil {
		return x.Stations
	}
	return nil
}

type CreateStationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*Station             `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStationsResponse) Reset() {
	*x = CreateStationsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStationsResponse) ProtoMessage() {}

func (x *CreateStationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStationsResponse.ProtoReflect.Descriptor instead.
func (*CreateStationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{3}
}

func (x *CreateStationsResponse) GetStations() []*Station {
	if x != nil {
		return x.Stations
	}
	return nil
}

type UpdateStationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*Station             `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStationsRequest) Reset() {
	*x = UpdateStationsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStationsRequest) ProtoMessage() {}

func (x *UpdateStationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStationsRequest.ProtoReflect.Descriptor instead.
func (*UpdateStationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateStationsRequest) GetStations() []*Station {
	if x != nil {
		return x.Stations
	}
	return nil
}

type UpdateStationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*Station             `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStationsResponse) Reset() {
	*x = UpdateStationsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStationsResponse) ProtoMessage() {}

func (x *UpdateStationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStationsResponse.ProtoReflect.Descriptor instead.
func (*UpdateStationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateStationsResponse) GetStations() []*Station {
	if x != nil {
		return x.Stations
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	HardDelete    bool                   `protobuf:"varint,2,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteRequest) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AffectedCount int64                  `protobuf:"varint,1,opt,name=affected_count,json=affectedCount,proto3" json:"affected_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteResponse) GetAffectedCount() int64 {
	if x != nil {
		return x.AffectedCount
	}
	return 0
}

type ListStationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *core.FilterOptions    `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStationsRequest) Reset() {
	*x = ListStationsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStationsRequest) ProtoMessage() {}

func (x *ListStationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStationsRequest.ProtoReflect.Descriptor instead.
func (*ListStationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{8}
}

func (x *ListStationsRequest) GetOptions() *core.FilterOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ListStationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*Station             `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	Pagination    *core.PaginationInfo   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStationsResponse) Reset() {
	*x = ListStationsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStationsResponse) ProtoMessage() {}

func (x *ListStationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStationsResponse.ProtoReflect.Descriptor instead.
func (*ListStationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{9}
}

func (x *ListStationsResponse) GetStations() []*Station {
	if x != nil {
		return x.Stations
	}
	return nil
}

func (x *ListStationsResponse) GetPagination() *core.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Represents a single feature/measurement within a DataPoint
type DataPointFeature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         *float64               `protobuf:"fixed64,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	TextualValue  *string                `protobuf:"bytes,3,opt,name=textual_value,json=textualValue,proto3,oneof" json:"textual_value,omitempty"`
	Purpose       IndicatorPurpose       `protobuf:"varint,4,opt,name=purpose,proto3,enum=waterquality.IndicatorPurpose" json:"purpose,omitempty"`
	Source        string                 `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"` // No base entity fields (ID, CreatedAt etc.) as this is embedded
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPointFeature) Reset() {
	*x = DataPointFeature{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPointFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointFeature) ProtoMessage() {}

func (x *DataPointFeature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointFeature.ProtoReflect.Descriptor instead.
func (*DataPointFeature) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{10}
}

func (x *DataPointFeature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataPointFeature) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *DataPointFeature) GetTextualValue() string {
	if x != nil && x.TextualValue != nil {
		return *x.TextualValue
	}
	return ""
}

func (x *DataPointFeature) GetPurpose() IndicatorPurpose {
	if x != nil {
		return x.Purpose
	}
	return IndicatorPurpose_INDICATOR_PURPOSE_UNSPECIFIED
}

func (x *DataPointFeature) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// Input version of DataPointFeature
type DataPointFeatureInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         *float64               `protobuf:"fixed64,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	TextualValue  *string                `protobuf:"bytes,3,opt,name=textual_value,json=textualValue,proto3,oneof" json:"textual_value,omitempty"`
	Purpose       IndicatorPurpose       `protobuf:"varint,4,opt,name=purpose,proto3,enum=waterquality.IndicatorPurpose" json:"purpose,omitempty"`
	Source        string                 `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPointFeatureInput) Reset() {
	*x = DataPointFeatureInput{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPointFeatureInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointFeatureInput) ProtoMessage() {}

func (x *DataPointFeatureInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointFeatureInput.ProtoReflect.Descriptor instead.
func (*DataPointFeatureInput) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{11}
}

func (x *DataPointFeatureInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataPointFeatureInput) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *DataPointFeatureInput) GetTextualValue() string {
	if x != nil && x.TextualValue != nil {
		return *x.TextualValue
	}
	return ""
}

func (x *DataPointFeatureInput) GetPurpose() IndicatorPurpose {
	if x != nil {
		return x.Purpose
	}
	return IndicatorPurpose_INDICATOR_PURPOSE_UNSPECIFIED
}

func (x *DataPointFeatureInput) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type DataPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Base fields inline
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	// DataPoint specific fields
	MonitoringTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=monitoring_time,json=monitoringTime,proto3" json:"monitoring_time,omitempty"`
	Wqi                *float64               `protobuf:"fixed64,6,opt,name=wqi,proto3,oneof" json:"wqi,omitempty"`
	StationId          string                 `protobuf:"bytes,7,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	Source             string                 `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	ObservationType    ObservationType        `protobuf:"varint,9,opt,name=observation_type,json=observationType,proto3,enum=waterquality.ObservationType" json:"observation_type,omitempty"`
	DataSourceSchemaId string                 `protobuf:"bytes,10,opt,name=data_source_schema_id,json=dataSourceSchemaId,proto3" json:"data_source_schema_id,omitempty"`
	// Updated features field
	Features      []*DataPointFeature `protobuf:"bytes,11,rep,name=features,proto3" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{12}
}

func (x *DataPoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataPoint) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DataPoint) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DataPoint) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DataPoint) GetMonitoringTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MonitoringTime
	}
	return nil
}

func (x *DataPoint) GetWqi() float64 {
	if x != nil && x.Wqi != nil {
		return *x.Wqi
	}
	return 0
}

func (x *DataPoint) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *DataPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DataPoint) GetObservationType() ObservationType {
	if x != nil {
		return x.ObservationType
	}
	return ObservationType_OBSERVATION_TYPE_UNSPECIFIED
}

func (x *DataPoint) GetDataSourceSchemaId() string {
	if x != nil {
		return x.DataSourceSchemaId
	}
	return ""
}

func (x *DataPoint) GetFeatures() []*DataPointFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

type DataPointInput struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MonitoringTime     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=monitoring_time,json=monitoringTime,proto3" json:"monitoring_time,omitempty"`
	Wqi                *float64               `protobuf:"fixed64,2,opt,name=wqi,proto3,oneof" json:"wqi,omitempty"`
	StationId          string                 `protobuf:"bytes,3,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	Source             string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	ObservationType    ObservationType        `protobuf:"varint,5,opt,name=observation_type,json=observationType,proto3,enum=waterquality.ObservationType" json:"observation_type,omitempty"`
	DataSourceSchemaId string                 `protobuf:"bytes,6,opt,name=data_source_schema_id,json=dataSourceSchemaId,proto3" json:"data_source_schema_id,omitempty"`
	// Updated features field
	Features      []*DataPointFeatureInput `protobuf:"bytes,7,rep,name=features,proto3" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPointInput) Reset() {
	*x = DataPointInput{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPointInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointInput) ProtoMessage() {}

func (x *DataPointInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointInput.ProtoReflect.Descriptor instead.
func (*DataPointInput) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{13}
}

func (x *DataPointInput) GetMonitoringTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MonitoringTime
	}
	return nil
}

func (x *DataPointInput) GetWqi() float64 {
	if x != nil && x.Wqi != nil {
		return *x.Wqi
	}
	return 0
}

func (x *DataPointInput) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *DataPointInput) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DataPointInput) GetObservationType() ObservationType {
	if x != nil {
		return x.ObservationType
	}
	return ObservationType_OBSERVATION_TYPE_UNSPECIFIED
}

func (x *DataPointInput) GetDataSourceSchemaId() string {
	if x != nil {
		return x.DataSourceSchemaId
	}
	return ""
}

func (x *DataPointInput) GetFeatures() []*DataPointFeatureInput {
	if x != nil {
		return x.Features
	}
	return nil
}

type CreateDataPointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPointInput      `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDataPointsRequest) Reset() {
	*x = CreateDataPointsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataPointsRequest) ProtoMessage() {}

func (x *CreateDataPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataPointsRequest.ProtoReflect.Descriptor instead.
func (*CreateDataPointsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{14}
}

func (x *CreateDataPointsRequest) GetDataPoints() []*DataPointInput {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

type CreateDataPointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDataPointsResponse) Reset() {
	*x = CreateDataPointsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataPointsResponse) ProtoMessage() {}

func (x *CreateDataPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataPointsResponse.ProtoReflect.Descriptor instead.
func (*CreateDataPointsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{15}
}

func (x *CreateDataPointsResponse) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

type UpdateDataPointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDataPointsRequest) Reset() {
	*x = UpdateDataPointsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDataPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataPointsRequest) ProtoMessage() {}

func (x *UpdateDataPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataPointsRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataPointsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateDataPointsRequest) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

type UpdateDataPointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDataPointsResponse) Reset() {
	*x = UpdateDataPointsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDataPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataPointsResponse) ProtoMessage() {}

func (x *UpdateDataPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataPointsResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataPointsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateDataPointsResponse) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

type ListDataPointsByStationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StationId     string                 `protobuf:"bytes,1,opt,name=station_id,json=stationId,proto3" json:"station_id,omitempty"`
	Options       *core.FilterOptions    `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDataPointsByStationRequest) Reset() {
	*x = ListDataPointsByStationRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataPointsByStationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPointsByStationRequest) ProtoMessage() {}

func (x *ListDataPointsByStationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPointsByStationRequest.ProtoReflect.Descriptor instead.
func (*ListDataPointsByStationRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{18}
}

func (x *ListDataPointsByStationRequest) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *ListDataPointsByStationRequest) GetOptions() *core.FilterOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ListDataPointsByStationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	Pagination    *core.PaginationInfo   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDataPointsByStationResponse) Reset() {
	*x = ListDataPointsByStationResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataPointsByStationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataPointsByStationResponse) ProtoMessage() {}

func (x *ListDataPointsByStationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataPointsByStationResponse.ProtoReflect.Descriptor instead.
func (*ListDataPointsByStationResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{19}
}

func (x *ListDataPointsByStationResponse) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *ListDataPointsByStationResponse) GetPagination() *core.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListAllDataPointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *core.FilterOptions    `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllDataPointsRequest) Reset() {
	*x = ListAllDataPointsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllDataPointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllDataPointsRequest) ProtoMessage() {}

func (x *ListAllDataPointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllDataPointsRequest.ProtoReflect.Descriptor instead.
func (*ListAllDataPointsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{20}
}

func (x *ListAllDataPointsRequest) GetOptions() *core.FilterOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ListAllDataPointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataPoints    []*DataPoint           `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	Pagination    *core.PaginationInfo   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllDataPointsResponse) Reset() {
	*x = ListAllDataPointsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllDataPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllDataPointsResponse) ProtoMessage() {}

func (x *ListAllDataPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllDataPointsResponse.ProtoReflect.Descriptor instead.
func (*ListAllDataPointsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{21}
}

func (x *ListAllDataPointsResponse) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *ListAllDataPointsResponse) GetPagination() *core.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Changed from streaming to unary: Receives a URL to the data file.
type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileUrl       string                 `protobuf:"bytes,1,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{22}
}

func (x *UploadRequest) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type UploadDataResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Message            string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	RecordsProcessed   int64                  `protobuf:"varint,2,opt,name=records_processed,json=recordsProcessed,proto3" json:"records_processed,omitempty"`
	RecordsFailed      int64                  `protobuf:"varint,3,opt,name=records_failed,json=recordsFailed,proto3" json:"records_failed,omitempty"`
	DataSourceSchemaId string                 `protobuf:"bytes,4,opt,name=data_source_schema_id,json=dataSourceSchemaId,proto3" json:"data_source_schema_id,omitempty"`
	Errors             []string               `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UploadDataResponse) Reset() {
	*x = UploadDataResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDataResponse) ProtoMessage() {}

func (x *UploadDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDataResponse.ProtoReflect.Descriptor instead.
func (*UploadDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{23}
}

func (x *UploadDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadDataResponse) GetRecordsProcessed() int64 {
	if x != nil {
		return x.RecordsProcessed
	}
	return 0
}

func (x *UploadDataResponse) GetRecordsFailed() int64 {
	if x != nil {
		return x.RecordsFailed
	}
	return 0
}

func (x *UploadDataResponse) GetDataSourceSchemaId() string {
	if x != nil {
		return x.DataSourceSchemaId
	}
	return ""
}

func (x *UploadDataResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DataSourceSchema struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	Name             string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	SourceIdentifier string                 `protobuf:"bytes,6,opt,name=source_identifier,json=sourceIdentifier,proto3" json:"source_identifier,omitempty"`
	SourceType       string                 `protobuf:"bytes,7,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	Description      string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	SchemaDefinition *structpb.Struct       `protobuf:"bytes,9,opt,name=schema_definition,json=schemaDefinition,proto3" json:"schema_definition,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DataSourceSchema) Reset() {
	*x = DataSourceSchema{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSourceSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceSchema) ProtoMessage() {}

func (x *DataSourceSchema) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceSchema.ProtoReflect.Descriptor instead.
func (*DataSourceSchema) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{24}
}

func (x *DataSourceSchema) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataSourceSchema) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DataSourceSchema) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DataSourceSchema) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DataSourceSchema) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataSourceSchema) GetSourceIdentifier() string {
	if x != nil {
		return x.SourceIdentifier
	}
	return ""
}

func (x *DataSourceSchema) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *DataSourceSchema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DataSourceSchema) GetSchemaDefinition() *structpb.Struct {
	if x != nil {
		return x.SchemaDefinition
	}
	return nil
}

type DataSourceSchemaInput struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SourceIdentifier string                 `protobuf:"bytes,2,opt,name=source_identifier,json=sourceIdentifier,proto3" json:"source_identifier,omitempty"`
	SourceType       string                 `protobuf:"bytes,3,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	SchemaDefinition *structpb.Struct       `protobuf:"bytes,5,opt,name=schema_definition,json=schemaDefinition,proto3" json:"schema_definition,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DataSourceSchemaInput) Reset() {
	*x = DataSourceSchemaInput{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSourceSchemaInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceSchemaInput) ProtoMessage() {}

func (x *DataSourceSchemaInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceSchemaInput.ProtoReflect.Descriptor instead.
func (*DataSourceSchemaInput) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{25}
}

func (x *DataSourceSchemaInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataSourceSchemaInput) GetSourceIdentifier() string {
	if x != nil {
		return x.SourceIdentifier
	}
	return ""
}

func (x *DataSourceSchemaInput) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *DataSourceSchemaInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DataSourceSchemaInput) GetSchemaDefinition() *structpb.Struct {
	if x != nil {
		return x.SchemaDefinition
	}
	return nil
}

type CreateDataSourceSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *DataSourceSchemaInput `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDataSourceSchemaRequest) Reset() {
	*x = CreateDataSourceSchemaRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataSourceSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataSourceSchemaRequest) ProtoMessage() {}

func (x *CreateDataSourceSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataSourceSchemaRequest.ProtoReflect.Descriptor instead.
func (*CreateDataSourceSchemaRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{26}
}

func (x *CreateDataSourceSchemaRequest) GetSchema() *DataSourceSchemaInput {
	if x != nil {
		return x.Schema
	}
	return nil
}

type CreateDataSourceSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *DataSourceSchema      `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDataSourceSchemaResponse) Reset() {
	*x = CreateDataSourceSchemaResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDataSourceSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataSourceSchemaResponse) ProtoMessage() {}

func (x *CreateDataSourceSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataSourceSchemaResponse.ProtoReflect.Descriptor instead.
func (*CreateDataSourceSchemaResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{27}
}

func (x *CreateDataSourceSchemaResponse) GetSchema() *DataSourceSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type UpdateDataSourceSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *DataSourceSchema      `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDataSourceSchemaRequest) Reset() {
	*x = UpdateDataSourceSchemaRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDataSourceSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataSourceSchemaRequest) ProtoMessage() {}

func (x *UpdateDataSourceSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataSourceSchemaRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataSourceSchemaRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateDataSourceSchemaRequest) GetSchema() *DataSourceSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type UpdateDataSourceSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *DataSourceSchema      `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDataSourceSchemaResponse) Reset() {
	*x = UpdateDataSourceSchemaResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDataSourceSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataSourceSchemaResponse) ProtoMessage() {}

func (x *UpdateDataSourceSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataSourceSchemaResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataSourceSchemaResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateDataSourceSchemaResponse) GetSchema() *DataSourceSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type GetDataSourceSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDataSourceSchemaRequest) Reset() {
	*x = GetDataSourceSchemaRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataSourceSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataSourceSchemaRequest) ProtoMessage() {}

func (x *GetDataSourceSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataSourceSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetDataSourceSchemaRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{30}
}

func (x *GetDataSourceSchemaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDataSourceSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *DataSourceSchema      `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDataSourceSchemaResponse) Reset() {
	*x = GetDataSourceSchemaResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDataSourceSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataSourceSchemaResponse) ProtoMessage() {}

func (x *GetDataSourceSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataSourceSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetDataSourceSchemaResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{31}
}

func (x *GetDataSourceSchemaResponse) GetSchema() *DataSourceSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type ListDataSourceSchemasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *core.FilterOptions    `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDataSourceSchemasRequest) Reset() {
	*x = ListDataSourceSchemasRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataSourceSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSourceSchemasRequest) ProtoMessage() {}

func (x *ListDataSourceSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSourceSchemasRequest.ProtoReflect.Descriptor instead.
func (*ListDataSourceSchemasRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{32}
}

func (x *ListDataSourceSchemasRequest) GetOptions() *core.FilterOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ListDataSourceSchemasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemas       []*DataSourceSchema    `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
	Pagination    *core.PaginationInfo   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDataSourceSchemasResponse) Reset() {
	*x = ListDataSourceSchemasResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDataSourceSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSourceSchemasResponse) ProtoMessage() {}

func (x *ListDataSourceSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSourceSchemasResponse.ProtoReflect.Descriptor instead.
func (*ListDataSourceSchemasResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{33}
}

func (x *ListDataSourceSchemasResponse) GetSchemas() []*DataSourceSchema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

func (x *ListDataSourceSchemasResponse) GetPagination() *core.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ThresholdConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Base fields inline
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	// ThresholdConfig specific fields
	ElementName   string  `protobuf:"bytes,5,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	MinValue      float64 `protobuf:"fixed64,6,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue      float64 `protobuf:"fixed64,7,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThresholdConfig) Reset() {
	*x = ThresholdConfig{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThresholdConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThresholdConfig) ProtoMessage() {}

func (x *ThresholdConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThresholdConfig.ProtoReflect.Descriptor instead.
func (*ThresholdConfig) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{34}
}

func (x *ThresholdConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThresholdConfig) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ThresholdConfig) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ThresholdConfig) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *ThresholdConfig) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *ThresholdConfig) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *ThresholdConfig) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

type ThresholdConfigInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ElementName   string                 `protobuf:"bytes,1,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	MinValue      float64                `protobuf:"fixed64,2,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue      float64                `protobuf:"fixed64,3,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThresholdConfigInput) Reset() {
	*x = ThresholdConfigInput{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThresholdConfigInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThresholdConfigInput) ProtoMessage() {}

func (x *ThresholdConfigInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThresholdConfigInput.ProtoReflect.Descriptor instead.
func (*ThresholdConfigInput) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{35}
}

func (x *ThresholdConfigInput) GetElementName() string {
	if x != nil {
		return x.ElementName
	}
	return ""
}

func (x *ThresholdConfigInput) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *ThresholdConfigInput) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

type CreateThresholdConfigsRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Configs       []*ThresholdConfigInput `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThresholdConfigsRequest) Reset() {
	*x = CreateThresholdConfigsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThresholdConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThresholdConfigsRequest) ProtoMessage() {}

func (x *CreateThresholdConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThresholdConfigsRequest.ProtoReflect.Descriptor instead.
func (*CreateThresholdConfigsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{36}
}

func (x *CreateThresholdConfigsRequest) GetConfigs() []*ThresholdConfigInput {
	if x != nil {
		return x.Configs
	}
	return nil
}

type CreateThresholdConfigsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Configs       []*ThresholdConfig     `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThresholdConfigsResponse) Reset() {
	*x = CreateThresholdConfigsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThresholdConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThresholdConfigsResponse) ProtoMessage() {}

func (x *CreateThresholdConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThresholdConfigsResponse.ProtoReflect.Descriptor instead.
func (*CreateThresholdConfigsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{37}
}

func (x *CreateThresholdConfigsResponse) GetConfigs() []*ThresholdConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type UpdateThresholdConfigsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Configs       []*ThresholdConfig     `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateThresholdConfigsRequest) Reset() {
	*x = UpdateThresholdConfigsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateThresholdConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateThresholdConfigsRequest) ProtoMessage() {}

func (x *UpdateThresholdConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateThresholdConfigsRequest.ProtoReflect.Descriptor instead.
func (*UpdateThresholdConfigsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateThresholdConfigsRequest) GetConfigs() []*ThresholdConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type UpdateThresholdConfigsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Configs       []*ThresholdConfig     `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateThresholdConfigsResponse) Reset() {
	*x = UpdateThresholdConfigsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateThresholdConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateThresholdConfigsResponse) ProtoMessage() {}

func (x *UpdateThresholdConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateThresholdConfigsResponse.ProtoReflect.Descriptor instead.
func (*UpdateThresholdConfigsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateThresholdConfigsResponse) GetConfigs() []*ThresholdConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

type ListThresholdConfigsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *core.FilterOptions    `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThresholdConfigsRequest) Reset() {
	*x = ListThresholdConfigsRequest{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThresholdConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThresholdConfigsRequest) ProtoMessage() {}

func (x *ListThresholdConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThresholdConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListThresholdConfigsRequest) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{40}
}

func (x *ListThresholdConfigsRequest) GetOptions() *core.FilterOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type ListThresholdConfigsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Configs       []*ThresholdConfig     `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	Pagination    *core.PaginationInfo   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThresholdConfigsResponse) Reset() {
	*x = ListThresholdConfigsResponse{}
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThresholdConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThresholdConfigsResponse) ProtoMessage() {}

func (x *ListThresholdConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_water_quality_service_water_quality_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThresholdConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListThresholdConfigsResponse) Descriptor() ([]byte, []int) {
	return file_proto_water_quality_service_water_quality_proto_rawDescGZIP(), []int{41}
}

func (x *ListThresholdConfigsResponse) GetConfigs() []*ThresholdConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *ListThresholdConfigsResponse) GetPagination() *core.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_proto_water_quality_service_water_quality_proto protoreflect.FileDescriptor

const file_proto_water_quality_service_water_quality_proto_rawDesc = "" +
	"\n" +
	"/proto/water-quality-service/water-quality.proto\x12\fwaterquality\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x17proto/core/common.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xd8\b\n" +
	"\aStation\x12m\n" +
	"\x02id\x18\x01 \x01(\tB]\x92AZ20Unique identifier for the station (UUID format).J&\"a1b2c3d4-e5f6-7890-1234-567890abcdef\"R\x02id\x12\x7f\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBD\x92AA2'Timestamp when the station was created.J\x16\"2023-01-15T10:30:00Z\"R\tcreatedAt\x12\x84\x01\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampBI\x92AF2,Timestamp when the station was last updated.J\x16\"2023-01-16T11:00:00Z\"R\tupdatedAt\x12\x9e\x01\n" +
	"\n" +
	"deleted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB^\x92A[2ATimestamp when the station was soft-deleted. Null if not deleted.J\x16\"2023-01-17T12:00:00Z\"H\x00R\tdeletedAt\x88\x01\x01\x12R\n" +
	"\x04name\x18\x05 \x01(\tB>\x92A;2\x1fName of the monitoring station.J\x18\"River Thames Station 1\"R\x04name\x12M\n" +
	"\blatitude\x18\x06 \x01(\x01B1\x92A.2#Latitude coordinate of the station.J\a51.5074R\blatitude\x12P\n" +
	"\tlongitude\x18\a \x01(\x01B2\x92A/2$Longitude coordinate of the station.J\a-0.1278R\tlongitude\x12V\n" +
	"\acountry\x18\b \x01(\tB<\x92A92%Country where the station is located.J\x10\"United Kingdom\"R\acountry\x12O\n" +
	"\blocation\x18\t \x01(\tB3\x92A02\x1cAdditional location details.J\x10\"Central London\"R\blocation:\x87\x01\x92A\x83\x01\n" +
	"\x80\x01*\aStation2.Represents a water quality monitoring station.\xd2\x01\x02id\xd2\x01\n" +
	"created_at\xd2\x01\n" +
	"updated_at\xd2\x01\x04name\xd2\x01\blatitude\xd2\x01\tlongitude\xd2\x01\acountryB\r\n" +
	"\v_deleted_at\"\xe1\x04\n" +
	"\fStationInput\x12R\n" +
	"\x04name\x18\x01 \x01(\tB>\x92A;2\x1fName of the monitoring station.J\x18\"River Thames Station 1\"R\x04name\x12_\n" +
	"\blatitude\x18\x02 \x01(\x01BC\x92A@25Latitude coordinate of the station (decimal degrees).J\a51.5074R\blatitude\x12b\n" +
	"\tlongitude\x18\x03 \x01(\x01BD\x92AA26Longitude coordinate of the station (decimal degrees).J\a-0.1278R\tlongitude\x12V\n" +
	"\acountry\x18\x04 \x01(\tB<\x92A92%Country where the station is located.J\x10\"United Kingdom\"R\acountry\x12o\n" +
	"\blocation\x18\x05 \x01(\tBS\x92AP2<Additional location details (city, region, water body name).J\x10\"Central London\"R\blocation:o\x92Al\n" +
	"j*\rStation Input21Data required to create a new monitoring station.\xd2\x01\x04name\xd2\x01\blatitude\xd2\x01\tlongitude\xd2\x01\acountry\"\xd4\x01\n" +
	"\x15CreateStationsRequest\x12X\n" +
	"\bstations\x18\x01 \x03(\v2\x1a.waterquality.StationInputB \x92A\x1d2\x1bList of stations to create.R\bstations:a\x92A^\n" +
	"\\*\x17Create Stations Request26Request to create one or more new monitoring stations.\xd2\x01\bstations\"\xef\x01\n" +
	"\x16CreateStationsResponse\x12x\n" +
	"\bstations\x18\x01 \x03(\v2\x15.waterquality.StationBE\x92AB2@List of created stations with system-generated fields populated.R\bstations:[\x92AX\n" +
	"V*\x18Create Stations Response2:Contains details of the newly created monitoring stations.\"\xf4\x01\n" +
	"\x15UpdateStationsRequest\x12s\n" +
	"\bstations\x18\x01 \x03(\v2\x15.waterquality.StationB@\x92A=2;List of stations with updated fields. Each must include ID.R\bstations:f\x92Ac\n" +
	"a*\x17Update Stations Request2;Request to update one or more existing monitoring stations.\xd2\x01\bstations\"\xc2\x01\n" +
	"\x16UpdateStationsResponse\x12Q\n" +
	"\bstations\x18\x01 \x03(\v2\x15.waterquality.StationB\x1e\x92A\x1b2\x19List of updated stations.R\bstations:U\x92AR\n" +
	"P*\x18Update Stations Response24Contains details of the updated monitoring stations.\"\xfd\x02\n" +
	"\rDeleteRequest\x12\x88\x01\n" +
	"\x03ids\x18\x01 \x03(\tBv\x92As2\x1fList of entity UUIDs to delete.JP[\"a1b2c3d4-e5f6-7890-1234-567890abcdef\", \"b2c3d4e5-f6a7-8901-2345-67890abcdef0\"]R\x03ids\x12\x8d\x01\n" +
	"\vhard_delete\x18\x02 \x01(\bBl\x92Ai2YIf true, performs a permanent (hard) delete. If false or omitted, performs a soft delete.:\x05falseJ\x05falseR\n" +
	"hardDelete:Q\x92AN\n" +
	"L*\x0eDelete Request24Request to delete one or more entities by their IDs.\xd2\x01\x03ids\"\xd0\x01\n" +
	"\x0eDeleteResponse\x12a\n" +
	"\x0eaffected_count\x18\x01 \x01(\x03B:\x92A722Number of entities that were successfully deleted.J\x012R\raffectedCount:[\x92AX\n" +
	"V*\x0fDelete Response22Contains information about the deletion operation.\xd2\x01\x0eaffected_count\"\xe0\x01\n" +
	"\x13ListStationsRequest\x12_\n" +
	"\aoptions\x18\x01 \x01(\v2\x13.core.FilterOptionsB0\x92A-2+Filtering, pagination, and sorting options.R\aoptions:h\x92Ae\n" +
	"c*\x15List Stations Request2JRequest to list monitoring stations with filtering and pagination options.\"\xe3\x02\n" +
	"\x14ListStationsResponse\x12f\n" +
	"\bstations\x18\x01 \x03(\v2\x15.waterquality.StationB3\x92A02.List of stations matching the filter criteria.R\bstations\x12y\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x14.core.PaginationInfoBC\x92A@2>Pagination information including total count and current page.R\n" +
	"pagination:h\x92Ae\n" +
	"c*\x16List Stations Response21Contains a paginated list of monitoring stations.\xd2\x01\bstations\xd2\x01\n" +
	"pagination\"\xfa\x06\n" +
	"\x10DataPointFeature\x12`\n" +
	"\x04name\x18\x01 \x01(\tBL\x92AI2AName of the feature (e.g., pH, DO, Temperature, Recommendations).J\x04\"pH\"R\x04name\x12o\n" +
	"\x05value\x18\x02 \x01(\x01BT\x92AQ2JNumerical value of the feature measurement. Null if textual_value is used.J\x037.4H\x00R\x05value\x88\x01\x01\x12\xab\x01\n" +
	"\rtextual_value\x18\x03 \x01(\tB\x80\x01\x92A}2fTextual value for non-numeric features (e.g., recommendations, quality status). Null if value is used.J\x13\"Slightly alkaline\"H\x01R\ftextualValue\x88\x01\x01\x12\x95\x01\n" +
	"\apurpose\x18\x04 \x01(\x0e2\x1e.waterquality.IndicatorPurposeB[\x92AX28Purpose of this feature (prediction, display, analysis).J\x1c\"INDICATOR_PURPOSE_ANALYSIS\"R\apurpose\x12\xb0\x01\n" +
	"\x06source\x18\x05 \x01(\tB\x97\x01\x92A\x93\x012{Source of this specific feature measurement (e.g., sensor ID, calculation method). Inherits from DataPoint source if empty.J\x14\"lab-test-batch-123\"R\x06source:~\x92A{\n" +
	"y*\x12Data Point Feature2IRepresents a single water quality measurement/feature within a DataPoint.\xd2\x01\x04name\xd2\x01\apurpose\xd2\x01\x06sourceB\b\n" +
	"\x06_valueB\x10\n" +
	"\x0e_textual_value\"\xbe\x04\n" +
	"\x15DataPointFeatureInput\x123\n" +
	"\x04name\x18\x01 \x01(\tB\x1f\x92A\x1c2\x14Name of the feature.J\x04\"pH\"R\x04name\x125\n" +
	"\x05value\x18\x02 \x01(\x01B\x1a\x92A\x172\x10Numerical value.J\x037.4H\x00R\x05value\x88\x01\x01\x12G\n" +
	"\rtextual_value\x18\x03 \x01(\tB\x1d\x92A\x1a2\x0eTextual value.J\b\"Normal\"H\x01R\ftextualValue\x88\x01\x01\x12\x85\x01\n" +
	"\apurpose\x18\x04 \x01(\x0e2\x1e.waterquality.IndicatorPurposeBK\x92AH2(Purpose (prediction, display, analysis).J\x1c\"INDICATOR_PURPOSE_ANALYSIS\"R\apurpose\x12U\n" +
	"\x06source\x18\x05 \x01(\tB=\x92A:2\"Source of the feature measurement.J\x14\"lab-test-batch-123\"R\x06source:u\x92Ar\n" +
	"p*\x18Data Point Feature Input2:Data required to define a feature within a DataPointInput.\xd2\x01\x04name\xd2\x01\apurpose\xd2\x01\x06sourceB\b\n" +
	"\x06_valueB\x10\n" +
	"\x0e_textual_value\"\xac\x0e\n" +
	"\tDataPoint\x12p\n" +
	"\x02id\x18\x01 \x01(\tB`\x92A]23Unique identifier for the data point (UUID format).J&\"a1b2c3d4-e5f6-7890-1234-567890abcdef\"R\x02id\x12\x82\x01\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBG\x92AD2*Timestamp when the data point was created.J\x16\"2023-01-15T10:30:00Z\"R\tcreatedAt\x12\x87\x01\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampBL\x92AI2/Timestamp when the data point was last updated.J\x16\"2023-01-16T11:00:00Z\"R\tupdatedAt\x12\xa1\x01\n" +
	"\n" +
	"deleted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampBa\x92A^2DTimestamp when the data point was soft-deleted. Null if not deleted.J\x16\"2023-01-17T12:00:00Z\"H\x00R\tdeletedAt\x88\x01\x01\x12\x9b\x01\n" +
	"\x0fmonitoring_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampBV\x92AS29Timestamp when the water quality measurements were taken.J\x16\"2023-01-14T08:45:00Z\"R\x0emonitoringTime\x12n\n" +
	"\x03wqi\x18\x06 \x01(\x01BW\x92AT2LWater Quality Index - a calculated value representing overall water quality.J\x0478.5H\x01R\x03wqi\x88\x01\x01\x12\x92\x01\n" +
	"\n" +
	"station_id\x18\a \x01(\tBs\x92Ap2FReference to the monitoring station UUID where the data was collected.J&\"b2c3d4e5-f6a7-8901-2345-67890abcdef0\"R\tstationId\x12j\n" +
	"\x06source\x18\b \x01(\tBR\x92AO2=Source of the data (e.g., filename, API endpoint, sensor ID).J\x0e\"manual-entry\"R\x06source\x12\xb6\x01\n" +
	"\x10observation_type\x18\t \x01(\x0e2\x1d.waterquality.ObservationTypeBl\x92Ai2LType of observation (actual, interpolation, predicted, realtime_monitoring).J\x19\"OBSERVATION_TYPE_ACTUAL\"R\x0fobservationType\x12\xa7\x01\n" +
	"\x15data_source_schema_id\x18\n" +
	" \x01(\tBt\x92Aq2GReference to the DataSourceSchema UUID used to process this data point.J&\"d4e5f6a7-b8c9-0123-4567-890abcdef012\"R\x12dataSourceSchemaId\x12\x96\x01\n" +
	"\bfeatures\x18\v \x03(\v2\x1e.waterquality.DataPointFeatureBZ\x92AW2UList of specific water quality measurements/features associated with this data point.R\bfeatures:\xd7\x01\x92A\xd3\x01\n" +
	"\xd0\x01*\n" +
	"Data Point2PRepresents a single water quality data collection event at a monitoring station.\xd2\x01\x02id\xd2\x01\n" +
	"created_at\xd2\x01\n" +
	"updated_at\xd2\x01\x0fmonitoring_time\xd2\x01\n" +
	"station_id\xd2\x01\x06source\xd2\x01\x10observation_type\xd2\x01\x15data_source_schema_idB\r\n" +
	"\v_deleted_atB\x06\n" +
	"\x04_wqi\"\x92\t\n" +
	"\x0eDataPointInput\x12\x9b\x01\n" +
	"\x0fmonitoring_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampBV\x92AS29Timestamp when the water quality measurements were taken.J\x16\"2023-01-14T08:45:00Z\"R\x0emonitoringTime\x12n\n" +
	"\x03wqi\x18\x02 \x01(\x01BW\x92AT2LWater Quality Index - a calculated value representing overall water quality.J\x0478.5H\x00R\x03wqi\x88\x01\x01\x12\x92\x01\n" +
	"\n" +
	"station_id\x18\x03 \x01(\tBs\x92Ap2FReference to the monitoring station UUID where the data was collected.J&\"b2c3d4e5-f6a7-8901-2345-67890abcdef0\"R\tstationId\x12j\n" +
	"\x06source\x18\x04 \x01(\tBR\x92AO2=Source of the data (e.g., filename, API endpoint, sensor ID).J\x0e\"manual-entry\"R\x06source\x12~\n" +
	"\x10observation_type\x18\x05 \x01(\x0e2\x1d.waterquality.ObservationTypeB4\x92A12\x14Type of observation.J\x19\"OBSERVATION_TYPE_ACTUAL\"R\x0fobservationType\x12\x87\x01\n" +
	"\x15data_source_schema_id\x18\x06 \x01(\tBT\x92AQ2'Reference to the DataSourceSchema UUID.J&\"d4e5f6a7-b8c9-0123-4567-890abcdef012\"R\x12dataSourceSchemaId\x12\xa3\x01\n" +
	"\bfeatures\x18\a \x03(\v2#.waterquality.DataPointFeatureInputBb\x92A_2]Collection of individual water quality measurements/features associated with this data point.R\bfeatures:\xb8\x01\x92A\xb4\x01\n" +
	"\xb1\x01*\x10Data Point Input2JData required to create a new data point with optional feature indicators.\xd2\x01\x0fmonitoring_time\xd2\x01\n" +
	"station_id\xd2\x01\x06source\xd2\x01\x10observation_type\xd2\x01\x15data_source_schema_idB\x06\n" +
	"\x04_wqi\"\xde\x01\n" +
	"\x17CreateDataPointsRequest\x12b\n" +
	"\vdata_points\x18\x01 \x03(\v2\x1c.waterquality.DataPointInputB#\x92A 2\x1eList of data points to create.R\n" +
	"dataPoints:_\x92A\\\n" +
	"Z*\x1aCreate Data Points Request2.Request to create one or more new data points.\xd2\x01\vdata_points\"\xf7\x01\n" +
	"\x18CreateDataPointsResponse\x12\x82\x01\n" +
	"\vdata_points\x18\x01 \x03(\v2\x17.waterquality.DataPointBH\x92AE2CList of created data points with system-generated fields populated.R\n" +
	"dataPoints:V\x92AS\n" +
	"Q*\x1bCreate Data Points Response22Contains details of the newly created data points.\"\xfe\x01\n" +
	"\x17UpdateDataPointsRequest\x12}\n" +
	"\vdata_points\x18\x01 \x03(\v2\x17.waterquality.DataPointBC\x92A@2>List of data points with updated fields. Each must include ID.R\n" +
	"dataPoints:d\x92Aa\n" +
	"_*\x1aUpdate Data Points Request23Request to update one or more existing data points.\xd2\x01\vdata_points\"\xc9\x01\n" +
	"\x18UpdateDataPointsResponse\x12[\n" +
	"\vdata_points\x18\x01 \x03(\v2\x17.waterquality.DataPointB!\x92A\x1e2\x1cList of updated data points.R\n" +
	"dataPoints:P\x92AM\n" +
	"K*\x1bUpdate Data Points Response2,Contains details of the updated data points.\"\x92\x03\n" +
	"\x1eListDataPointsByStationRequest\x12x\n" +
	"\n" +
	"station_id\x18\x01 \x01(\tBY\x92AV2,UUID of the station to list data points for.J&\"b2c3d4e5-f6a7-8901-2345-67890abcdef0\"R\tstationId\x12_\n" +
	"\aoptions\x18\x02 \x01(\v2\x13.core.FilterOptionsB0\x92A-2+Filtering, pagination, and sorting options.R\aoptions:\x94\x01\x92A\x90\x01\n" +
	"\x8d\x01*#List Data Points By Station Request2YRequest to list data points for a specific station with filtering and pagination options.\xd2\x01\n" +
	"station_id\"\x9b\x03\n" +
	"\x1fListDataPointsByStationResponse\x12p\n" +
	"\vdata_points\x18\x01 \x03(\v2\x17.waterquality.DataPointB6\x92A321List of data points matching the filter criteria.R\n" +
	"dataPoints\x12y\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x14.core.PaginationInfoBC\x92A@2>Pagination information including total count and current page.R\n" +
	"pagination:\x8a\x01\x92A\x86\x01\n" +
	"\x83\x01*$List Data Points By Station Response2@Contains a paginated list of data points for a specific station.\xd2\x01\vdata_points\xd2\x01\n" +
	"pagination\"\xf8\x01\n" +
	"\x18ListAllDataPointsRequest\x12_\n" +
	"\aoptions\x18\x01 \x01(\v2\x13.core.FilterOptionsB0\x92A-2+Filtering, pagination, and sorting options.R\aoptions:{\x92Ax\n" +
	"v*\x1cList All Data Points Request2VRequest to list data points across all stations with filtering and pagination options.\"\x86\x03\n" +
	"\x19ListAllDataPointsResponse\x12p\n" +
	"\vdata_points\x18\x01 \x03(\v2\x17.waterquality.DataPointB6\x92A321List of data points matching the filter criteria.R\n" +
	"dataPoints\x12y\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x14.core.PaginationInfoBC\x92A@2>Pagination information including total count and current page.R\n" +
	"pagination:|\x92Ay\n" +
	"w*\x1dList All Data Points Response2;Contains a paginated list of data points from all stations.\xd2\x01\vdata_points\xd2\x01\n" +
	"pagination\"\xc4\x02\n" +
	"\rUploadRequest\x12\xc8\x01\n" +
	"\bfile_url\x18\x01 \x01(\tB\xac\x01\x92A\xa8\x012^URL pointing to the data file to be processed (e.g., a publicly accessible GGDrive or S3 URL).JF\"https://storage.googleapis.com/bucket-name/water_quality_jan2023.csv\"R\afileUrl:h\x92Ae\n" +
	"c*\x1aUpload Request (URL Based)2:Request containing the URL of a data file to be processed.\xd2\x01\bfile_url\"\xe5\x05\n" +
	"\x12UploadDataResponse\x12x\n" +
	"\amessage\x18\x01 \x01(\tB^\x92A[2,Summary message about the upload processing.J+\"Upload successful, processed 125 records.\"R\amessage\x12`\n" +
	"\x11records_processed\x18\x02 \x01(\x03B3\x92A02)Number of records successfully processed.J\x03125R\x10recordsProcessed\x12X\n" +
	"\x0erecords_failed\x18\x03 \x01(\x03B1\x92A.2)Number of records that failed to process.J\x013R\rrecordsFailed\x12\x8f\x01\n" +
	"\x15data_source_schema_id\x18\x04 \x01(\tB\\\x92AY2/ID of schema used or created during processing.J&\"d4e5f6a7-b8c9-0123-4567-890abcdef012\"R\x12dataSourceSchemaId\x12\x8d\x01\n" +
	"\x06errors\x18\x05 \x03(\tBu\x92Ar2-List of errors encountered during processing.JA[\"Row 15: Invalid pH value\", \"Row 23: Missing station reference\"]R\x06errors:w\x92At\n" +
	"r*\x14Upload Data Response2+Response after processing an uploaded file.\xd2\x01\amessage\xd2\x01\x11records_processed\xd2\x01\x0erecords_failed\"\x8e\r\n" +
	"\x10DataSourceSchema\x12l\n" +
	"\x02id\x18\x01 \x01(\tB\\\x92AY2/Unique identifier for the schema (UUID format).J&\"d4e5f6a7-b8c9-0123-4567-890abcdef012\"R\x02id\x12~\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBC\x92A@2&Timestamp when the schema was created.J\x16\"2023-01-15T10:30:00Z\"R\tcreatedAt\x12\x83\x01\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampBH\x92AE2+Timestamp when the schema was last updated.J\x16\"2023-01-16T11:00:00Z\"R\tupdatedAt\x12\x9d\x01\n" +
	"\n" +
	"deleted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB]\x92AZ2@Timestamp when the schema was soft-deleted. Null if not deleted.J\x16\"2023-01-17T12:00:00Z\"H\x00R\tdeletedAt\x88\x01\x01\x12c\n" +
	"\x04name\x18\x05 \x01(\tBO\x92AL2\x1fName of the data source schema.J)\"Ministry of Environment Monthly Reports\"R\x04name\x12\x90\x01\n" +
	"\x11source_identifier\x18\x06 \x01(\tBc\x92A`2IUnique identifier for the source (e.g., URL, file pattern, API endpoint).J\x13\"moe_monthly_*.csv\"R\x10sourceIdentifier\x12e\n" +
	"\vsource_type\x18\a \x01(\tBD\x92AA28Type of the data source (csv, json, excel, api, manual).J\x05\"csv\"R\n" +
	"sourceType\x12\xb9\x01\n" +
	"\vdescription\x18\b \x01(\tB\x96\x01\x92A\x92\x0129Detailed description of the data source and its contents.JU\"Monthly water quality reports from the Ministry of Environment monitoring stations.\"R\vdescription\x12\x96\x03\n" +
	"\x11schema_definition\x18\t \x01(\v2\x17.google.protobuf.StructB\xcf\x02\x92A\xcb\x022oJSON structure defining the fields and their mappings to entities. Represents []FieldDefinition from Go entity.J\xd7\x01{\"fields\": [{\"source_name\": \"Station ID\", \"data_type\": \"string\", \"target_entity\": \"Station\", \"target_field\": \"Name\"}, {\"source_name\": \"pH\", \"data_type\": \"float\", \"target_entity\": \"Indicator\", \"purpose\": \"display\"}]}R\x10schemaDefinition:\xa2\x01\x92A\x9e\x01\n" +
	"\x9b\x01*\x12Data Source Schema2=Defines the structure and mapping of an external data source.\xd2\x01\x02id\xd2\x01\n" +
	"created_at\xd2\x01\n" +
	"updated_at\xd2\x01\x04name\xd2\x01\vsource_type\xd2\x01\x11schema_definitionB\r\n" +
	"\v_deleted_at\"\xa9\b\n" +
	"\x15DataSourceSchemaInput\x12c\n" +
	"\x04name\x18\x01 \x01(\tBO\x92AL2\x1fName of the data source schema.J)\"Ministry of Environment Monthly Reports\"R\x04name\x12\x90\x01\n" +
	"\x11source_identifier\x18\x02 \x01(\tBc\x92A`2IUnique identifier for the source (e.g., URL, file pattern, API endpoint).J\x13\"moe_monthly_*.csv\"R\x10sourceIdentifier\x12e\n" +
	"\vsource_type\x18\x03 \x01(\tBD\x92AA28Type of the data source (csv, json, excel, api, manual).J\x05\"csv\"R\n" +
	"sourceType\x12\xb9\x01\n" +
	"\vdescription\x18\x04 \x01(\tB\x96\x01\x92A\x92\x0129Detailed description of the data source and its contents.JU\"Monthly water quality reports from the Ministry of Environment monitoring stations.\"R\vdescription\x12\xe9\x02\n" +
	"\x11schema_definition\x18\x05 \x01(\v2\x17.google.protobuf.StructB\xa2\x02\x92A\x9e\x022BJSON structure defining the fields and their mappings to entities.J\xd7\x01{\"fields\": [{\"source_name\": \"Station ID\", \"data_type\": \"string\", \"target_entity\": \"Station\", \"target_field\": \"Name\"}, {\"source_name\": \"pH\", \"data_type\": \"float\", \"target_entity\": \"Indicator\", \"purpose\": \"display\"}]}R\x10schemaDefinition:\x88\x01\x92A\x84\x01\n" +
	"\x81\x01*\x18Data Source Schema Input2<Data required to create a new data source schema definition.\xd2\x01\x04name\xd2\x01\vsource_type\xd2\x01\x11schema_definition\"\xea\x01\n" +
	"\x1dCreateDataSourceSchemaRequest\x12^\n" +
	"\x06schema\x18\x01 \x01(\v2#.waterquality.DataSourceSchemaInputB!\x92A\x1e2\x1cSchema definition to create.R\x06schema:i\x92Af\n" +
	"d*!Create Data Source Schema Request26Request to create a new data source schema definition.\xd2\x01\x06schema\"\xf9\x01\n" +
	"\x1eCreateDataSourceSchemaResponse\x12s\n" +
	"\x06schema\x18\x01 \x01(\v2\x1e.waterquality.DataSourceSchemaB;\x92A826Created schema with system-generated fields populated.R\x06schema:b\x92A_\n" +
	"]*\"Create Data Source Schema Response2.Contains the newly created data source schema.\xd2\x01\x06schema\"\xfb\x01\n" +
	"\x1dUpdateDataSourceSchemaRequest\x12i\n" +
	"\x06schema\x18\x01 \x01(\v2\x1e.waterquality.DataSourceSchemaB1\x92A.2,Schema with updated fields. Must include ID.R\x06schema:o\x92Al\n" +
	"j*!Update Data Source Schema Request2<Request to update an existing data source schema definition.\xd2\x01\x06schema\"\xcc\x01\n" +
	"\x1eUpdateDataSourceSchemaResponse\x12L\n" +
	"\x06schema\x18\x01 \x01(\v2\x1e.waterquality.DataSourceSchemaB\x14\x92A\x112\x0fUpdated schema.R\x06schema:\\\x92AY\n" +
	"W*\"Update Data Source Schema Response2(Contains the updated data source schema.\xd2\x01\x06schema\"\xe0\x01\n" +
	"\x1aGetDataSourceSchemaRequest\x12\\\n" +
	"\x02id\x18\x01 \x01(\tBL\x92AI2\x1fUUID of the schema to retrieve.J&\"d4e5f6a7-b8c9-0123-4567-890abcdef012\"R\x02id:d\x92Aa\n" +
	"_*\x1eGet Data Source Schema Request28Request to retrieve a specific data source schema by ID.\xd2\x01\x02id\"\xce\x01\n" +
	"\x1bGetDataSourceSchemaResponse\x12R\n" +
	"\x06schema\x18\x01 \x01(\v2\x1e.waterquality.DataSourceSchemaB\x1a\x92A\x172\x15The retrieved schema.R\x06schema:[\x92AX\n" +
	"V*\x1fGet Data Source Schema Response2*Contains the requested data source schema.\xd2\x01\x06schema\"\xf4\x01\n" +
	"\x1cListDataSourceSchemasRequest\x12_\n" +
	"\aoptions\x18\x01 \x01(\v2\x13.core.FilterOptionsB0\x92A-2+Filtering, pagination, and sorting options.R\aoptions:s\x92Ap\n" +
	"n* List Data Source Schemas Request2JRequest to list data source schemas with filtering and pagination options.\"\xfc\x02\n" +
	"\x1dListDataSourceSchemasResponse\x12l\n" +
	"\aschemas\x18\x01 \x03(\v2\x1e.waterquality.DataSourceSchemaB2\x92A/2-List of schemas matching the filter criteria.R\aschemas\x12y\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x14.core.PaginationInfoBC\x92A@2>Pagination information including total count and current page.R\n" +
	"pagination:r\x92Ao\n" +
	"m*!List Data Source Schemas Response21Contains a paginated list of data source schemas.\xd2\x01\aschemas\xd2\x01\n" +
	"pagination\"\x83\b\n" +
	"\x0fThresholdConfig\x12v\n" +
	"\x02id\x18\x01 \x01(\tBf\x92Ac29Unique identifier for the threshold config (UUID format).J&\"a1b2c3d4-e5f6-7890-1234-567890abcdef\"R\x02id\x12\x88\x01\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBM\x92AJ20Timestamp when the threshold config was created.J\x16\"2023-01-15T10:30:00Z\"R\tcreatedAt\x12\x8d\x01\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampBR\x92AO25Timestamp when the threshold config was last updated.J\x16\"2023-01-16T11:00:00Z\"R\tupdatedAt\x12\xa7\x01\n" +
	"\n" +
	"deleted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampBg\x92Ad2JTimestamp when the threshold config was soft-deleted. Null if not deleted.J\x16\"2023-01-17T12:00:00Z\"H\x00R\tdeletedAt\x88\x01\x01\x12Z\n" +
	"\felement_name\x18\x05 \x01(\tB7\x92A42,Name of the water quality element/parameter.J\x04\"pH\"R\velementName\x12P\n" +
	"\tmin_value\x18\x06 \x01(\x01B3\x92A02)Minimum acceptable value for the element.J\x036.5R\bminValue\x12P\n" +
	"\tmax_value\x18\a \x01(\x01B3\x92A02)Maximum acceptable value for the element.J\x038.5R\bmaxValue:\xa3\x01\x92A\x9f\x01\n" +
	"\x9c\x01*\x17Threshold Configuration2;Represents water quality parameter threshold configuration.\xd2\x01\x02id\xd2\x01\n" +
	"created_at\xd2\x01\n" +
	"updated_at\xd2\x01\felement_name\xd2\x01\tmin_value\xd2\x01\tmax_valueB\r\n" +
	"\v_deleted_at\"\x9d\x03\n" +
	"\x14ThresholdConfigInput\x12Z\n" +
	"\felement_name\x18\x01 \x01(\tB7\x92A42,Name of the water quality element/parameter.J\x04\"pH\"R\velementName\x12P\n" +
	"\tmin_value\x18\x02 \x01(\x01B3\x92A02)Minimum acceptable value for the element.J\x036.5R\bminValue\x12P\n" +
	"\tmax_value\x18\x03 \x01(\x01B3\x92A02)Maximum acceptable value for the element.J\x038.5R\bmaxValue:\x84\x01\x92A\x80\x01\n" +
	"~*\x1dThreshold Configuration Input26Data required to create a new threshold configuration.\xd2\x01\felement_name\xd2\x01\tmin_value\xd2\x01\tmax_value\"\xff\x01\n" +
	"\x1dCreateThresholdConfigsRequest\x12n\n" +
	"\aconfigs\x18\x01 \x03(\v2\".waterquality.ThresholdConfigInputB0\x92A-2+List of threshold configurations to create.R\aconfigs:n\x92Ak\n" +
	"i* Create Threshold Configs Request2;Request to create one or more new threshold configurations.\xd2\x01\aconfigs\"\x9c\x02\n" +
	"\x1eCreateThresholdConfigsResponse\x12\x8e\x01\n" +
	"\aconfigs\x18\x01 \x03(\v2\x1d.waterquality.ThresholdConfigBU\x92AR2PList of created threshold configurations with system-generated fields populated.R\aconfigs:i\x92Af\n" +
	"d*!Create Threshold Configs Response2?Contains details of the newly created threshold configurations.\"\xa0\x02\n" +
	"\x1dUpdateThresholdConfigsRequest\x12\x89\x01\n" +
	"\aconfigs\x18\x01 \x03(\v2\x1d.waterquality.ThresholdConfigBP\x92AM2KList of threshold configurations with updated fields. Each must include ID.R\aconfigs:s\x92Ap\n" +
	"n* Update Threshold Configs Request2@Request to update one or more existing threshold configurations.\xd2\x01\aconfigs\"\xee\x01\n" +
	"\x1eUpdateThresholdConfigsResponse\x12g\n" +
	"\aconfigs\x18\x01 \x03(\v2\x1d.waterquality.ThresholdConfigB.\x92A+2)List of updated threshold configurations.R\aconfigs:c\x92A`\n" +
	"^*!Update Threshold Configs Response29Contains details of the updated threshold configurations.\"\xf6\x01\n" +
	"\x1bListThresholdConfigsRequest\x12_\n" +
	"\aoptions\x18\x01 \x01(\v2\x13.core.FilterOptionsB0\x92A-2+Filtering, pagination, and sorting options.R\aoptions:v\x92As\n" +
	"q*\x1eList Threshold Configs Request2ORequest to list threshold configurations with filtering and pagination options.\"\x8e\x03\n" +
	"\x1cListThresholdConfigsResponse\x12|\n" +
	"\aconfigs\x18\x01 \x03(\v2\x1d.waterquality.ThresholdConfigBC\x92A@2>List of threshold configurations matching the filter criteria.R\aconfigs\x12y\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x14.core.PaginationInfoBC\x92A@2>Pagination information including total count and current page.R\n" +
	"pagination:u\x92Ar\n" +
	"p*\x1fList Threshold Configs Response26Contains a paginated list of threshold configurations.\xd2\x01\aconfigs\xd2\x01\n" +
	"pagination*\xbe\x01\n" +
	"\x0fObservationType\x12 \n" +
	"\x1cOBSERVATION_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17OBSERVATION_TYPE_ACTUAL\x10\x01\x12\"\n" +
	"\x1eOBSERVATION_TYPE_INTERPOLATION\x10\x02\x12\x1e\n" +
	"\x1aOBSERVATION_TYPE_PREDICTED\x10\x03\x12(\n" +
	"$OBSERVATION_TYPE_REALTIME_MONITORING\x10\x04*\x96\x01\n" +
	"\x10IndicatorPurpose\x12!\n" +
	"\x1dINDICATOR_PURPOSE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cINDICATOR_PURPOSE_PREDICTION\x10\x01\x12\x1d\n" +
	"\x19INDICATOR_PURPOSE_DISPLAY\x10\x02\x12\x1e\n" +
	"\x1aINDICATOR_PURPOSE_ANALYSIS\x10\x032\xf7'\n" +
	"\x13WaterQualityService\x12\xd2\x01\n" +
	"\x0eCreateStations\x12#.waterquality.CreateStationsRequest\x1a$.waterquality.CreateStationsResponse\"u\x92AI\n" +
	"\bStations\x12\x0fCreate Stations\x1a,Creates one or more new monitoring stations.\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/api/v1/water-quality/stations\x12\xd7\x01\n" +
	"\x0eUpdateStations\x12#.waterquality.UpdateStationsRequest\x1a$.waterquality.UpdateStationsResponse\"z\x92AN\n" +
	"\bStations\x12\x0fUpdate Stations\x1a1Updates one or more existing monitoring stations.\x82\xd3\xe4\x93\x02#:\x01*\x1a\x1e/api/v1/water-quality/stations\x12\xe2\x01\n" +
	"\x0eDeleteStations\x12\x1b.waterquality.DeleteRequest\x1a\x1c.waterquality.DeleteResponse\"\x94\x01\x92Aa\n" +
	"\bStations\x12\x0fDelete Stations\x1aDDeletes one or more monitoring stations. Can be soft or hard delete.\x82\xd3\xe4\x93\x02*:\x01*\"%/api/v1/water-quality/stations/delete\x12\xe5\x01\n" +
	"\fListStations\x12!.waterquality.ListStationsRequest\x1a\".waterquality.ListStationsResponse\"\x8d\x01\x92Ad\n" +
	"\bStations\x12\rList Stations\x1aIRetrieves a paginated list of monitoring stations with filtering options.\x82\xd3\xe4\x93\x02 \x12\x1e/api/v1/water-quality/stations\x12\xfb\x01\n" +
	"\x10CreateDataPoints\x12%.waterquality.CreateDataPointsRequest\x1a&.waterquality.CreateDataPointsResponse\"\x97\x01\x92Ah\n" +
	"\vData Points\x12\x12Create Data Points\x1aECreates one or more new data points with their associated indicators.\x82\xd3\xe4\x93\x02&:\x01*\"!/api/v1/water-quality/data-points\x12\xde\x01\n" +
	"\x10UpdateDataPoints\x12%.waterquality.UpdateDataPointsRequest\x1a&.waterquality.UpdateDataPointsResponse\"{\x92AL\n" +
	"\vData Points\x12\x12Update Data Points\x1a)Updates one or more existing data points.\x82\xd3\xe4\x93\x02&:\x01*\x1a!/api/v1/water-quality/data-points\x12\xe5\x01\n" +
	"\x10DeleteDataPoints\x12\x1b.waterquality.DeleteRequest\x1a\x1c.waterquality.DeleteResponse\"\x95\x01\x92A_\n" +
	"\vData Points\x12\x12Delete Data Points\x1a<Deletes one or more data points. Can be soft or hard delete.\x82\xd3\xe4\x93\x02-:\x01*\"(/api/v1/water-quality/data-points/delete\x12\xa8\x02\n" +
	"\x17ListDataPointsByStation\x12,.waterquality.ListDataPointsByStationRequest\x1a-.waterquality.ListDataPointsByStationResponse\"\xaf\x01\x92Am\n" +
	"\vData Points\x12\x1bList Data Points by Station\x1aARetrieves a paginated list of data points for a specific station.\x82\xd3\xe4\x93\x029\x127/api/v1/water-quality/stations/{station_id}/data-points\x12\x89\x03\n" +
	"\x1bListDataPointsByStationPost\x12,.waterquality.ListDataPointsByStationRequest\x1a-.waterquality.ListDataPointsByStationResponse\"\x8c\x02\x92A\xcc\x01\n" +
	"\vData Points\x12\"List Data Points by Station (POST)\x1a\x98\x01Retrieves a paginated list of data points using POST. All filter/pagination parameters, including station_id, must be provided in the JSON request body.\x82\xd3\xe4\x93\x026:\x01*\"1/api/v1/water-quality/data-points/list-by-station\x12\x9c\x02\n" +
	"\x11ListAllDataPoints\x12&.waterquality.ListAllDataPointsRequest\x1a'.waterquality.ListAllDataPointsResponse\"\xb5\x01\x92A}\n" +
	"\vData Points\x12\x14List All Data Points\x1aXRetrieves a paginated list of data points across all stations. Uses POST with JSON body.\x82\xd3\xe4\x93\x02/:\x01*\"*/api/v1/water-quality/data-points/list-all\x12\xe1\x01\n" +
	"\n" +
	"UploadData\x12\x1b.waterquality.UploadRequest\x1a .waterquality.UploadDataResponse\"\x93\x01\x92Ai\n" +
	"\vData Import\x12\x13Upload Data via URL\x1aEInitiates processing of a water quality data file specified by a URL.\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/api/v1/water-quality/upload\x12\xff\x01\n" +
	"\x16CreateDataSourceSchema\x12+.waterquality.CreateDataSourceSchemaRequest\x1a,.waterquality.CreateDataSourceSchemaResponse\"\x89\x01\x92A^\n" +
	"\x13Data Source Schemas\x12\x19Create Data Source Schema\x1a,Creates a new data source schema definition.\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/api/v1/water-quality/schemas\x12\x91\x02\n" +
	"\x16UpdateDataSourceSchema\x12+.waterquality.UpdateDataSourceSchemaRequest\x1a,.waterquality.UpdateDataSourceSchemaResponse\"\x9b\x01\x92Ad\n" +
	"\x13Data Source Schemas\x12\x19Update Data Source Schema\x1a2Updates an existing data source schema definition.\x82\xd3\xe4\x93\x02.:\x01*\x1a)/api/v1/water-quality/schemas/{schema.id}\x12\xf7\x01\n" +
	"\x13GetDataSourceSchema\x12(.waterquality.GetDataSourceSchemaRequest\x1a).waterquality.GetDataSourceSchemaResponse\"\x8a\x01\x92A]\n" +
	"\x13Data Source Schemas\x12\x16Get Data Source Schema\x1a.Retrieves a specific data source schema by ID.\x82\xd3\xe4\x93\x02$\x12\"/api/v1/water-quality/schemas/{id}\x12\x95\x02\n" +
	"\x15ListDataSourceSchemas\x12*.waterquality.ListDataSourceSchemasRequest\x1a+.waterquality.ListDataSourceSchemasResponse\"\xa2\x01\x92Az\n" +
	"\x13Data Source Schemas\x12\x18List Data Source Schemas\x1aIRetrieves a paginated list of data source schemas with filtering options.\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/water-quality/schemas\x12\x99\x02\n" +
	"\x16CreateThresholdConfigs\x12+.waterquality.CreateThresholdConfigsRequest\x1a,.waterquality.CreateThresholdConfigsResponse\"\xa3\x01\x92An\n" +
	"\x18Threshold Configurations\x12\x1fCreate Threshold Configurations\x1a1Creates one or more new threshold configurations.\x82\xd3\xe4\x93\x02,:\x01*\"'/api/v1/water-quality/threshold-configs\x12\x9e\x02\n" +
	"\x16UpdateThresholdConfigs\x12+.waterquality.UpdateThresholdConfigsRequest\x1a,.waterquality.UpdateThresholdConfigsResponse\"\xa8\x01\x92As\n" +
	"\x18Threshold Configurations\x12\x1fUpdate Threshold Configurations\x1a6Updates one or more existing threshold configurations.\x82\xd3\xe4\x93\x02,:\x01*\x1a'/api/v1/water-quality/threshold-configs\x12\x99\x02\n" +
	"\x16DeleteThresholdConfigs\x12\x1b.waterquality.DeleteRequest\x1a\x1c.waterquality.DeleteResponse\"\xc3\x01\x92A\x86\x01\n" +
	"\x18Threshold Configurations\x12\x1fDelete Threshold Configurations\x1aIDeletes one or more threshold configurations. Can be soft or hard delete.\x82\xd3\xe4\x93\x023:\x01*\"./api/v1/water-quality/threshold-configs/delete\x12\xac\x02\n" +
	"\x14ListThresholdConfigs\x12).waterquality.ListThresholdConfigsRequest\x1a*.waterquality.ListThresholdConfigsResponse\"\xbc\x01\x92A\x89\x01\n" +
	"\x18Threshold Configurations\x12\x1dList Threshold Configurations\x1aNRetrieves a paginated list of threshold configurations with filtering options.\x82\xd3\xe4\x93\x02)\x12'/api/v1/water-quality/threshold-configs\x1a3\x92A0\x12.Operations related to water quality monitoringB\x94\x02\x92A\xdb\x01\x12Q\n" +
	"\x19Water Quality Service API\x12/API for managing water quality monitoring data.2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonZL\n" +
	"J\n" +
	"\n" +
	"BearerAuth\x12<\b\x02\x12'JWT Bearer token (e.g., 'Bearer ey...')\x1a\rAuthorization \x02b\x10\n" +
	"\x0e\n" +
	"\n" +
	"BearerAuth\x12\x00Z3golang-microservices-boilerplate/proto/waterqualityb\x06proto3"

var (
	file_proto_water_quality_service_water_quality_proto_rawDescOnce sync.Once
	file_proto_water_quality_service_water_quality_proto_rawDescData []byte
)

func file_proto_water_quality_service_water_quality_proto_rawDescGZIP() []byte {
	file_proto_water_quality_service_water_quality_proto_rawDescOnce.Do(func() {
		file_proto_water_quality_service_water_quality_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_water_quality_service_water_quality_proto_rawDesc), len(file_proto_water_quality_service_water_quality_proto_rawDesc)))
	})
	return file_proto_water_quality_service_water_quality_proto_rawDescData
}

var file_proto_water_quality_service_water_quality_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_water_quality_service_water_quality_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_proto_water_quality_service_water_quality_proto_goTypes = []any{
	(ObservationType)(0),                    // 0: waterquality.ObservationType
	(IndicatorPurpose)(0),                   // 1: waterquality.IndicatorPurpose
	(*Station)(nil),                         // 2: waterquality.Station
	(*StationInput)(nil),                    // 3: waterquality.StationInput
	(*CreateStationsRequest)(nil),           // 4: waterquality.CreateStationsRequest
	(*CreateStationsResponse)(nil),          // 5: waterquality.CreateStationsResponse
	(*UpdateStationsRequest)(nil),           // 6: waterquality.UpdateStationsRequest
	(*UpdateStationsResponse)(nil),          // 7: waterquality.UpdateStationsResponse
	(*DeleteRequest)(nil),                   // 8: waterquality.DeleteRequest
	(*DeleteResponse)(nil),                  // 9: waterquality.DeleteResponse
	(*ListStationsRequest)(nil),             // 10: waterquality.ListStationsRequest
	(*ListStationsResponse)(nil),            // 11: waterquality.ListStationsResponse
	(*DataPointFeature)(nil),                // 12: waterquality.DataPointFeature
	(*DataPointFeatureInput)(nil),           // 13: waterquality.DataPointFeatureInput
	(*DataPoint)(nil),                       // 14: waterquality.DataPoint
	(*DataPointInput)(nil),                  // 15: waterquality.DataPointInput
	(*CreateDataPointsRequest)(nil),         // 16: waterquality.CreateDataPointsRequest
	(*CreateDataPointsResponse)(nil),        // 17: waterquality.CreateDataPointsResponse
	(*UpdateDataPointsRequest)(nil),         // 18: waterquality.UpdateDataPointsRequest
	(*UpdateDataPointsResponse)(nil),        // 19: waterquality.UpdateDataPointsResponse
	(*ListDataPointsByStationRequest)(nil),  // 20: waterquality.ListDataPointsByStationRequest
	(*ListDataPointsByStationResponse)(nil), // 21: waterquality.ListDataPointsByStationResponse
	(*ListAllDataPointsRequest)(nil),        // 22: waterquality.ListAllDataPointsRequest
	(*ListAllDataPointsResponse)(nil),       // 23: waterquality.ListAllDataPointsResponse
	(*UploadRequest)(nil),                   // 24: waterquality.UploadRequest
	(*UploadDataResponse)(nil),              // 25: waterquality.UploadDataResponse
	(*DataSourceSchema)(nil),                // 26: waterquality.DataSourceSchema
	(*DataSourceSchemaInput)(nil),           // 27: waterquality.DataSourceSchemaInput
	(*CreateDataSourceSchemaRequest)(nil),   // 28: waterquality.CreateDataSourceSchemaRequest
	(*CreateDataSourceSchemaResponse)(nil),  // 29: waterquality.CreateDataSourceSchemaResponse
	(*UpdateDataSourceSchemaRequest)(nil),   // 30: waterquality.UpdateDataSourceSchemaRequest
	(*UpdateDataSourceSchemaResponse)(nil),  // 31: waterquality.UpdateDataSourceSchemaResponse
	(*GetDataSourceSchemaRequest)(nil),      // 32: waterquality.GetDataSourceSchemaRequest
	(*GetDataSourceSchemaResponse)(nil),     // 33: waterquality.GetDataSourceSchemaResponse
	(*ListDataSourceSchemasRequest)(nil),    // 34: waterquality.ListDataSourceSchemasRequest
	(*ListDataSourceSchemasResponse)(nil),   // 35: waterquality.ListDataSourceSchemasResponse
	(*ThresholdConfig)(nil),                 // 36: waterquality.ThresholdConfig
	(*ThresholdConfigInput)(nil),            // 37: waterquality.ThresholdConfigInput
	(*CreateThresholdConfigsRequest)(nil),   // 38: waterquality.CreateThresholdConfigsRequest
	(*CreateThresholdConfigsResponse)(nil),  // 39: waterquality.CreateThresholdConfigsResponse
	(*UpdateThresholdConfigsRequest)(nil),   // 40: waterquality.UpdateThresholdConfigsRequest
	(*UpdateThresholdConfigsResponse)(nil),  // 41: waterquality.UpdateThresholdConfigsResponse
	(*ListThresholdConfigsRequest)(nil),     // 42: waterquality.ListThresholdConfigsRequest
	(*ListThresholdConfigsResponse)(nil),    // 43: waterquality.ListThresholdConfigsResponse
	(*timestamppb.Timestamp)(nil),           // 44: google.protobuf.Timestamp
	(*core.FilterOptions)(nil),              // 45: core.FilterOptions
	(*core.PaginationInfo)(nil),             // 46: core.PaginationInfo
	(*structpb.Struct)(nil),                 // 47: google.protobuf.Struct
}
var file_proto_water_quality_service_water_quality_proto_depIdxs = []int32{
	44, // 0: waterquality.Station.created_at:type_name -> google.protobuf.Timestamp
	44, // 1: waterquality.Station.updated_at:type_name -> google.protobuf.Timestamp
	44, // 2: waterquality.Station.deleted_at:type_name -> google.protobuf.Timestamp
	3,  // 3: waterquality.CreateStationsRequest.stations:type_name -> waterquality.StationInput
	2,  // 4: waterquality.CreateStationsResponse.stations:type_name -> waterquality.Station
	2,  // 5: waterquality.UpdateStationsRequest.stations:type_name -> waterquality.Station
	2,  // 6: waterquality.UpdateStationsResponse.stations:type_name -> waterquality.Station
	45, // 7: waterquality.ListStationsRequest.options:type_name -> core.FilterOptions
	2,  // 8: waterquality.ListStationsResponse.stations:type_name -> waterquality.Station
	46, // 9: waterquality.ListStationsResponse.pagination:type_name -> core.PaginationInfo
	1,  // 10: waterquality.DataPointFeature.purpose:type_name -> waterquality.IndicatorPurpose
	1,  // 11: waterquality.DataPointFeatureInput.purpose:type_name -> waterquality.IndicatorPurpose
	44, // 12: waterquality.DataPoint.created_at:type_name -> google.protobuf.Timestamp
	44, // 13: waterquality.DataPoint.updated_at:type_name -> google.protobuf.Timestamp
	44, // 14: waterquality.DataPoint.deleted_at:type_name -> google.protobuf.Timestamp
	44, // 15: waterquality.DataPoint.monitoring_time:type_name -> google.protobuf.Timestamp
	0,  // 16: waterquality.DataPoint.observation_type:type_name -> waterquality.ObservationType
	12, // 17: waterquality.DataPoint.features:type_name -> waterquality.DataPointFeature
	44, // 18: waterquality.DataPointInput.monitoring_time:type_name -> google.protobuf.Timestamp
	0,  // 19: waterquality.DataPointInput.observation_type:type_name -> waterquality.ObservationType
	13, // 20: waterquality.DataPointInput.features:type_name -> waterquality.DataPointFeatureInput
	15, // 21: waterquality.CreateDataPointsRequest.data_points:type_name -> waterquality.DataPointInput
	14, // 22: waterquality.CreateDataPointsResponse.data_points:type_name -> waterquality.DataPoint
	14, // 23: waterquality.UpdateDataPointsRequest.data_points:type_name -> waterquality.DataPoint
	14, // 24: waterquality.UpdateDataPointsResponse.data_points:type_name -> waterquality.DataPoint
	45, // 25: waterquality.ListDataPointsByStationRequest.options:type_name -> core.FilterOptions
	14, // 26: waterquality.ListDataPointsByStationResponse.data_points:type_name -> waterquality.DataPoint
	46, // 27: waterquality.ListDataPointsByStationResponse.pagination:type_name -> core.PaginationInfo
	45, // 28: waterquality.ListAllDataPointsRequest.options:type_name -> core.FilterOptions
	14, // 29: waterquality.ListAllDataPointsResponse.data_points:type_name -> waterquality.DataPoint
	46, // 30: waterquality.ListAllDataPointsResponse.pagination:type_name -> core.PaginationInfo
	44, // 31: waterquality.DataSourceSchema.created_at:type_name -> google.protobuf.Timestamp
	44, // 32: waterquality.DataSourceSchema.updated_at:type_name -> google.protobuf.Timestamp
	44, // 33: waterquality.DataSourceSchema.deleted_at:type_name -> google.protobuf.Timestamp
	47, // 34: waterquality.DataSourceSchema.schema_definition:type_name -> google.protobuf.Struct
	47, // 35: waterquality.DataSourceSchemaInput.schema_definition:type_name -> google.protobuf.Struct
	27, // 36: waterquality.CreateDataSourceSchemaRequest.schema:type_name -> waterquality.DataSourceSchemaInput
	26, // 37: waterquality.CreateDataSourceSchemaResponse.schema:type_name -> waterquality.DataSourceSchema
	26, // 38: waterquality.UpdateDataSourceSchemaRequest.schema:type_name -> waterquality.DataSourceSchema
	26, // 39: waterquality.UpdateDataSourceSchemaResponse.schema:type_name -> waterquality.DataSourceSchema
	26, // 40: waterquality.GetDataSourceSchemaResponse.schema:type_name -> waterquality.DataSourceSchema
	45, // 41: waterquality.ListDataSourceSchemasRequest.options:type_name -> core.FilterOptions
	26, // 42: waterquality.ListDataSourceSchemasResponse.schemas:type_name -> waterquality.DataSourceSchema
	46, // 43: waterquality.ListDataSourceSchemasResponse.pagination:type_name -> core.PaginationInfo
	44, // 44: waterquality.ThresholdConfig.created_at:type_name -> google.protobuf.Timestamp
	44, // 45: waterquality.ThresholdConfig.updated_at:type_name -> google.protobuf.Timestamp
	44, // 46: waterquality.ThresholdConfig.deleted_at:type_name -> google.protobuf.Timestamp
	37, // 47: waterquality.CreateThresholdConfigsRequest.configs:type_name -> waterquality.ThresholdConfigInput
	36, // 48: waterquality.CreateThresholdConfigsResponse.configs:type_name -> waterquality.ThresholdConfig
	36, // 49: waterquality.UpdateThresholdConfigsRequest.configs:type_name -> waterquality.ThresholdConfig
	36, // 50: waterquality.UpdateThresholdConfigsResponse.configs:type_name -> waterquality.ThresholdConfig
	45, // 51: waterquality.ListThresholdConfigsRequest.options:type_name -> core.FilterOptions
	36, // 52: waterquality.ListThresholdConfigsResponse.configs:type_name -> waterquality.ThresholdConfig
	46, // 53: waterquality.ListThresholdConfigsResponse.pagination:type_name -> core.PaginationInfo
	4,  // 54: waterquality.WaterQualityService.CreateStations:input_type -> waterquality.CreateStationsRequest
	6,  // 55: waterquality.WaterQualityService.UpdateStations:input_type -> waterquality.UpdateStationsRequest
	8,  // 56: waterquality.WaterQualityService.DeleteStations:input_type -> waterquality.DeleteRequest
	10, // 57: waterquality.WaterQualityService.ListStations:input_type -> waterquality.ListStationsRequest
	16, // 58: waterquality.WaterQualityService.CreateDataPoints:input_type -> waterquality.CreateDataPointsRequest
	18, // 59: waterquality.WaterQualityService.UpdateDataPoints:input_type -> waterquality.UpdateDataPointsRequest
	8,  // 60: waterquality.WaterQualityService.DeleteDataPoints:input_type -> waterquality.DeleteRequest
	20, // 61: waterquality.WaterQualityService.ListDataPointsByStation:input_type -> waterquality.ListDataPointsByStationRequest
	20, // 62: waterquality.WaterQualityService.ListDataPointsByStationPost:input_type -> waterquality.ListDataPointsByStationRequest
	22, // 63: waterquality.WaterQualityService.ListAllDataPoints:input_type -> waterquality.ListAllDataPointsRequest
	24, // 64: waterquality.WaterQualityService.UploadData:input_type -> waterquality.UploadRequest
	28, // 65: waterquality.WaterQualityService.CreateDataSourceSchema:input_type -> waterquality.CreateDataSourceSchemaRequest
	30, // 66: waterquality.WaterQualityService.UpdateDataSourceSchema:input_type -> waterquality.UpdateDataSourceSchemaRequest
	32, // 67: waterquality.WaterQualityService.GetDataSourceSchema:input_type -> waterquality.GetDataSourceSchemaRequest
	34, // 68: waterquality.WaterQualityService.ListDataSourceSchemas:input_type -> waterquality.ListDataSourceSchemasRequest
	38, // 69: waterquality.WaterQualityService.CreateThresholdConfigs:input_type -> waterquality.CreateThresholdConfigsRequest
	40, // 70: waterquality.WaterQualityService.UpdateThresholdConfigs:input_type -> waterquality.UpdateThresholdConfigsRequest
	8,  // 71: waterquality.WaterQualityService.DeleteThresholdConfigs:input_type -> waterquality.DeleteRequest
	42, // 72: waterquality.WaterQualityService.ListThresholdConfigs:input_type -> waterquality.ListThresholdConfigsRequest
	5,  // 73: waterquality.WaterQualityService.CreateStations:output_type -> waterquality.CreateStationsResponse
	7,  // 74: waterquality.WaterQualityService.UpdateStations:output_type -> waterquality.UpdateStationsResponse
	9,  // 75: waterquality.WaterQualityService.DeleteStations:output_type -> waterquality.DeleteResponse
	11, // 76: waterquality.WaterQualityService.ListStations:output_type -> waterquality.ListStationsResponse
	17, // 77: waterquality.WaterQualityService.CreateDataPoints:output_type -> waterquality.CreateDataPointsResponse
	19, // 78: waterquality.WaterQualityService.UpdateDataPoints:output_type -> waterquality.UpdateDataPointsResponse
	9,  // 79: waterquality.WaterQualityService.DeleteDataPoints:output_type -> waterquality.DeleteResponse
	21, // 80: waterquality.WaterQualityService.ListDataPointsByStation:output_type -> waterquality.ListDataPointsByStationResponse
	21, // 81: waterquality.WaterQualityService.ListDataPointsByStationPost:output_type -> waterquality.ListDataPointsByStationResponse
	23, // 82: waterquality.WaterQualityService.ListAllDataPoints:output_type -> waterquality.ListAllDataPointsResponse
	25, // 83: waterquality.WaterQualityService.UploadData:output_type -> waterquality.UploadDataResponse
	29, // 84: waterquality.WaterQualityService.CreateDataSourceSchema:output_type -> waterquality.CreateDataSourceSchemaResponse
	31, // 85: waterquality.WaterQualityService.UpdateDataSourceSchema:output_type -> waterquality.UpdateDataSourceSchemaResponse
	33, // 86: waterquality.WaterQualityService.GetDataSourceSchema:output_type -> waterquality.GetDataSourceSchemaResponse
	35, // 87: waterquality.WaterQualityService.ListDataSourceSchemas:output_type -> waterquality.ListDataSourceSchemasResponse
	39, // 88: waterquality.WaterQualityService.CreateThresholdConfigs:output_type -> waterquality.CreateThresholdConfigsResponse
	41, // 89: waterquality.WaterQualityService.UpdateThresholdConfigs:output_type -> waterquality.UpdateThresholdConfigsResponse
	9,  // 90: waterquality.WaterQualityService.DeleteThresholdConfigs:output_type -> waterquality.DeleteResponse
	43, // 91: waterquality.WaterQualityService.ListThresholdConfigs:output_type -> waterquality.ListThresholdConfigsResponse
	73, // [73:92] is the sub-list for method output_type
	54, // [54:73] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_proto_water_quality_service_water_quality_proto_init() }
func file_proto_water_quality_service_water_quality_proto_init() {
	if File_proto_water_quality_service_water_quality_proto != nil {
		return
	}
	file_proto_water_quality_service_water_quality_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_water_quality_service_water_quality_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_water_quality_service_water_quality_proto_msgTypes[11].OneofWrappers = []any{}
	file_proto_water_quality_service_water_quality_proto_msgTypes[12].OneofWrappers = []any{}
	file_proto_water_quality_service_water_quality_proto_msgTypes[13].OneofWrappers = []any{}
	file_proto_water_quality_service_water_quality_proto_msgTypes[24].OneofWrappers = []any{}
	file_proto_water_quality_service_water_quality_proto_msgTypes[34].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_water_quality_service_water_quality_proto_rawDesc), len(file_proto_water_quality_service_water_quality_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_water_quality_service_water_quality_proto_goTypes,
		DependencyIndexes: file_proto_water_quality_service_water_quality_proto_depIdxs,
		EnumInfos:         file_proto_water_quality_service_water_quality_proto_enumTypes,
		MessageInfos:      file_proto_water_quality_service_water_quality_proto_msgTypes,
	}.Build()
	File_proto_water_quality_service_water_quality_proto = out.File
	file_proto_water_quality_service_water_quality_proto_goTypes = nil
	file_proto_water_quality_service_water_quality_proto_depIdxs = nil
}
